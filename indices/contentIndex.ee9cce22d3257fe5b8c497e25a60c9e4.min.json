{"/":{"title":"OverDeveloped","content":"\n# **My Real üß† Is A Sleep ( if I had one üßü) This Is My Second üß†**\n\n* #### The CosmicüöÄ Gateway For üëΩ Who Like Development And Technology\n\n-  This Is A Personal Knowledge Management system All [[utils/about/_about|About]] üî•Topics In Development And The üî•üî• Technology Around and  Also ü•±ü•± School Notes\n\n### Use The üîç  Bar To Search Through The Knowledge Base Quickly","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Detailed_Notes/Containers/Docker/docker":{"title":"Docker","content":"\n**Docker** is a set of platform as a service (PaaS) products which uses OS-level virtualization to deliver software in a _container_ . A container is light weight isolated virtual environment which runs reliably in any environment which has a docker engine. \n\n#### Why do we need docker\n\nLet say you have built some app. Which runs in a weird flavor of Linux  and it's written in COBOL. So lets say your trying to share this app with your friend. But he doesn't even use Linux or he doesn't even know what is COBOL. So he can't use your cool app. So we will  have have t o replicate our environment. We can use a virtual machine to do this which is the OG way to do it. In the VM the hardware is simulated and installed with the required OS and dependencies but because each VM has it's own OS they are bulky, heavy and slow. So you can use a docker container to share your app. Docker containers are the same as VM's but with a key difference is without virtualizing hardware the docker engine virtualizes the OS and uses the shared kernel to run the applications. Which means docker containers are faster and light weight than VM's. In simple terms docker is fast, reliable and lightweight virtualization solution. \n\n#### The universe of docker\n\n- Docker File\n\t- The [[Detailed_Notes/Containers/Docker/docker_file|docker file]]  is like DNA it's code which describes how the docker image should be built.\n- Docker Image\n\t- The docker image  is a snapshot of the software along with all it's dependencies to the operating system level. \n\t- The image is immutable it can be used to spin up multiple containers of the software in the real world. \n- Docker Container\n\t- The docker container is the running docker image.\n- Docker Compose\n\t- The [[Detailed_Notes/Containers/Docker/docker_compose|docker compose]] file is used to deploy multiple docker containers at once.\n\n\n#### The docker cli and desktop app\n\n- Docker has a a cli to interact with the docker engine\n\t- The [[Detailed_Notes/Containers/Docker/docker_commands|docker cli commands]] can be used to build, deploy, kill and do many more things to docker containers.\n- Docker also has desktop apps for Windows, Linux and Mac.  \n","lastmodified":"2022-11-26T15:24:38.459427089Z","tags":null},"/Detailed_Notes/Containers/Docker/docker_commands":{"title":"Docker Commands","content":"\n## Installation\n\nOne click installation script:\n```\ncurl -fsSL https://get.docker.com -o get-docker.sh\nsudo sh get-docker.sh\n```\n\nRun docker as non root user:\n```\nsudo groupadd docker\nsudo usermod -aG docker $USER\n```\n\nInstall Docker Engine : [Docker Engine](https://docs.docker.com/engine/install/)\n\n---\n## Build Images\n\n\n---\n## Docker CLI\n\n**Run Containers**\n\nCOMMAND | DESCRIPTION\n---|---\n`docker run IMAGE` | Start a new container\n`docker run --name CONTAINER IMAGE` | Start a new container and set a name\n`docker run -p HOSTPORT:CONTAINERPORT IMAGE` | Start a new container with mapped ports\n`docker run -P IMAGE` | Start a new container and map all ports\n\n**Container Management:**\n\nCOMMAND | DESCRIPTION\n---|---\n`docker create IMAGE` | Create a new container\n`docker start CONTAINER` | Start a container\n`docker stop CONTAINER` | Graceful stop a container\n`docker kill CONTAINER` | Kill (SIGKILL) a container\n`docker restart CONTAINER` | Graceful stop and restart a container\n`docker pause CONTAINER` | Suspend a container\n`docker unpause CONTAINER` | Resume a container\n`docker rm CONTAINER` | Destroy a container\n\n**Container Bulk Management**\n\nCOMMAND | DESCRIPTION\n---|---\n`docker stop $(docker ps -q)` | To stop all the running containers\n`docker stop $(docker ps -a -q)` | To stop all the stopped and running containers\n`docker kill $(docker ps -q)` | To kill all the running containers\n`docker kill $(docker ps -a -q)` | To kill all the stopped and running containers\n`docker restart $(docker ps  -q)` | To restart all  running containers\n`docker restart $(docker ps -a -q)` | To restart all the stopped and running containers\n`docker rm $(docker ps  -q)` | To destroy all running containers\n`docker rm $(docker ps -a -q)` | To destroy all the stopped and running containers\n`docker pause $(docker ps  -q)` | To pause all  running containers\n`docker pause $(docker ps -a -q)` | To pause all the stopped and running containers\n`docker start $(docker ps  -q)` | To start all  running containers\n`docker start $(docker ps -a -q)` | To start all the stopped and running containers\n`docker rm -vf $(docker ps -a -q)` | To delete all containers including its volumes use\n`docker rmi -f $(docker images -a -q)` | To delete all the images\n`docker system prune` | To delete all dangling and unused images, containers, cache and volumes\n`docker system prune -a` | To delete all used and unused images\n`docker system prune --volumes` | To delete all docker volumes\n\n**Inspect Containers:**\n\nCOMMAND | DESCRIPTION\n---|---\n`docker ps` | List running containers\n`docker ps -a` | List all containers, including stopped\n`docker logs CONTAINER` | Show a container output\n`docker logs -f CONTAINER` | Follow a container output\n`docker top CONTAINER` | List the processes running in a container\n`docker diff` | Show the differences with the image (modified files)\n`docker inspect` | Show information of a container (json formatted)\n\n**Run Commands:**\n\nCOMMAND | DESCRIPTION\n---|---\n`docker attach CONTAINER` | Attach to a container\n`docker cp CONTAINER:PATH HOSTPATH` | Copy files from the container\n`docker cp HOSTPATH CONTAINER:PATH` | Copy files into the container\n`docker export CONTAINER` | Export the content of the container (tar archive)\n`docker exec CONTAINER` | Run a command inside a container\n`docker exec -it CONTAINER /bin/bash` | Open an interactive shell inside a container (there is no bash in some images, use /bin/sh)\n`docker wait CONTAINER` | Wait until the container terminates and return the exit code\n\n**Images:**\n\nCOMMAND | DESCRIPTION\n---|---\n`docker images` | List all local images\n`docker history IMAGE` | Show the image history\n`docker inspect IMAGE` | Show information (json formatted)\n`docker tag IMAGE TAG` | Tag an image\n`docker commit CONTAINER IMAGE` | Create an image (from a container)\n`docker import URL` | Create an image (from a tarball)\n`docker rmi IMAGE` | Delete images\n`docker pull REPO:[TAG]` | pull an image/repo from a registry\n`docker push REPO:[TAG]` | push and image/repo to a registry\n`docker search TEXT` | Search an image on the official registry\n`docker login` | Login to a registry\n`docker logout` | Logout from a registry\n`docker save REPO:[TAG]` | Export an image/repo as a tarball\n`docker load` | Load images from a tarball\n\n**Volumes:**\n\nCOMMAND | DESCRIPTION\n---|---\n`docker volume ls` | List all vol1umes\n`docker volume create VOLUME` | Create a volume\n`docker volume inspect VOLUME` | Show information (json formatted)\n`docker volume rm VOLUME` | Destroy a volume\n`docker volume ls --filter=\"dangling=true\"` | List all dangling volumes (not referenced by any container)\n`docker volume prune` | Delete all volumes (not referenced by any container)\n\n### Backup a container\nBackup docker data from inside container volumes and package it in a tarball archive.\n`docker run --rm --volumes-from CONTAINER -v $(pwd):/backup busybox tar cvfz /backup/backup.tar CONTAINERPATH`\n\n### Restore container from backup\nRestore the volume with a tarball archive.\n`docker run --rm --volumes-from CONTAINER -v $(pwd):/backup busybox sh -c \"cd CONTAINERPATH \u0026\u0026 tar xvf /backup/backup.tar --strip 1\"`\n## Networks\n\n## Troubleshooting\n### Networking\n`docker run --name netshoot --rm -it nicolaka/netshoot /bin/bash`","lastmodified":"2022-11-26T15:24:38.459427089Z","tags":null},"/Detailed_Notes/Containers/Docker/docker_compose":{"title":"Docker Compose","content":"\n**Docker compose** is used to run multiple docker containers at once \n\n## Networking\n\nBy default Docker-Compose will create a new network for the given compose file. You can change the behavior by defining custom networks in your compose file.\n\n### Create and assign custom network\n\n*Example:*\n```yaml\nnetworks:\n  custom-network:\n\nservices:\n  app:\n    networks:\n      - custom-network\n```\n### Use existing networks\nIf you want to use an existing Docker network for your compose files, you can add the `external: true` parameter in your compose file\n*Example:*\n```yaml\nnetworks:\n  existing-network:\n    external: true\n```\n\n## Volumes\n\nVolumes allow Docker containers to use persistent storage. In a compose file, you can create and map volumes like this:\n```yaml\nvolumes:\n  my-volume:\n\nservices:\n  app:\n    volumes:\n      - my-volume:/path-in-container\n```\n\nThese volumes are stored in `/var/lib/docker/volumes`.\n\n## Commands\n\nCOMMAND | DESCRIPTION\n---|---\n`docker compose up -d` | Start a new container stack\n`docker compose down` | Stops the container stack\n`docker compose down --remove-orphans` | Stops the container stack and Remove containers for services not defined in the Compose file","lastmodified":"2022-11-26T15:24:38.459427089Z","tags":null},"/Detailed_Notes/Containers/Docker/docker_file":{"title":"Docker FIle","content":"\n A **docker file** is  a text document that contains all the commands a user could call on the command line to assemble an docker image. Using docker build users can create an automated build that executes the command's described in the **docker file** in succession to create a docker image.    \n \n#### Example docker files\n\n- #### A docker file  \n```Docker\n# The base image\nFROM node:lts-alpine3.16\n\n# Create a directory for the app\nRUN mkdir -p usr/src/app\n\n# Copies all the files \nCOPY . .\n\n# Install app dependencies\n# The order matters for dependencie caching\nRUN npm install\n\n# Exposeses internal port 3000 in the docker contianer\nEXPOSE 3000\n\n# The command which runs when the docker container starts\nCMD [ \"npm\", \"run\", \"start\" ]\n```\n- #### A multi stage docker file  \n```Docker\n# The base image for the docker image build\nFROM node:lts-alpine3.16 AS builder\n\n# Create app directory\nWORKDIR /app\n\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\nCOPY package*.json ./\nCOPY prisma ./prisma/\n\n# Install app dependencies\n# The order matters for dependencie caching\nRUN npm install\n\n# Copies all the files \nCOPY . .\n\n# Builds the application\nRUN npm run build\n\n# The docker image runner image\nFROM node:lts-alpine3.16\n\n# copies all the files from the builder the runner\nCOPY --from=builder /app/node_modules ./node_modules\nCOPY --from=builder /app/package*.json ./\nCOPY --from=builder /app/dist ./dist\n\n# Exposeses internal port 3000 in the docker contianer\nEXPOSE 3000\n\n# The command which runs when the docker container starts\nCMD [ \"npm\", \"run\", \"start:prod\" ]\n```  ","lastmodified":"2022-11-26T15:24:38.459427089Z","tags":null},"/Nibm_Notes/ECS/Meeting/mock_meeting":{"title":"Mock Meeting","content":"\nA mock meeting for ICS based on Software Engineering. The meeting will be on software engineering.\n\nBut the meeting will be based on less technical topics.\n- like design","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/ECS/Meeting/mock_meeting_agenda":{"title":"Mock Meeting Agenda","content":"","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/CAT_cables":{"title":"CAT cables","content":"¬†\n\n-   In context of the 100-ohm UTP type of cable used for Ethernet wiring\n\n-   CAT cable types\n\n    -   Cat3\n\n    -   Cat4\n\n    -   Cat5\n\n    -   Cat5e\n\n    -   Cat6\n\n    -   Cat7\n\n¬†\n\n![](Nibm_Notes/Semester_1/Stage_1/ICS/assets/027_CAT_cables__000.png){width=\"3.8125in\" height=\"2.2604166666666665in\"}\n\n¬†\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/IP_address":{"title":"IP Address","content":"¬†\n\n-  IP address is 32 bit address\n\n-  IP address are unique\n\n-  IP stands for internet protocol and is basically an address that the packets will be sent to\n\n-  IP address has two parts [[Nibm_Notes/Semester_1/Stage_1/ICS/parts_of_an_IP_address#022_Parts_of_an_IP_address_ Network|Network]] and [[Nibm_Notes/Semester_1/Stage_1/ICS/parts_of_an_IP_address#022_Parts_of_an_IP_address_ Hosts|Host]] \n\n- There are 5 types of  [[Nibm_Notes/Semester_1/Stage_1/ICS/types_of_IP_address|IP address]]\n-   Example for an ip address\n\n    -   172.16.254.1\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/IT_related_legislations_in_Sri_Lanka":{"title":"IT Related Legislations in Sri Lanka","content":"\nIT Related Legislations In Sri Lanka\n\n###### 1.  Data Protection Act\n\n    -   Personal Data Protection Act No: 09 Of 2022\n\n        -   personal data could be collected only for a specified purpose and not for any other purpose that is incompatible with the said purposes. However, processing data in public interest, scientific or historical research will not be considered incompatible. Personal Data has to be processed in a manner to ensure appropriate security, including protection against accidental loss, destruction or damage.\n\n\u003e ¬†\n\n###### 2.  Electronic Transactions Act\n\n    -   Electronic Transactions Act No. 19 of 2006\n\n        -   The Electronic Transactions Act No, 19 of 2006 gives provides legal recognition for Electronic Signatures -- including Digital certificates\n\n\u003e ¬†\n\n-   The use of Electronic Signatures through technologies such as \"Digital Certificates\" enables users to achieve confidentiality and integrity using the public key cryptosystem and hash function. The issuing of digital certificates are done through duly recognized certificate service providers.\n\n\u003e ¬†\n\n-   The Electronic Transactions Act was brought into operation with effect from 1st October 2007\n\n\u003e ¬†\n\n###### 3. Digital Signature and Authentication Regime\n\n    -   The Electronic Transactions Act No, 19 of 2006 gives provides legal recognition for Electronic Signatures -- including Digital certificates\n\n\u003e ¬†\n\n###### 4.  Computer Crimes Act\n\n    -   The Computer Crimes Act No. 24 of 2007 provides for the identification of computer crimes and stipulates the procedure for the investigation and enforcement of such crimes\n\n\u003e ¬†\n\n-   The Act creates offences for unauthorized modification, alteration or deletion of information and denial of access, which makes it an offence for any person to program the computer in such a manner so as to prevent authorized persons from obtaining access. Other offences sought to be created under the proposed Act include causing damage or harm to the computer by the introduction of viruses and logic bombs etc, unauthorized copying of information, unauthorized use of computer service and interception of a computer programme, data or information while it is been transmitted from one computer to another\n\n\u003e ¬†\n\n###### 5. Cyber Security Act\n\n    -   Cyber Security Act, of 2019.\n\n\u003e ¬†\n\n###### 6.  Intellectual Property Rights (IPR)\n\n    -   Intellectual Property Act no. 36 of 2003\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/Internet_Protocol_version_6_IPV-6":{"title":"Internet Protocol Version 6 (IPV 6)","content":"\n¬†\n\n-   Internet Protocol version 6 (IPv6) is the most recent version of the Internet Protocol (Ip)\n\n-   IPv6 extends address size to 128 bits\n\n-   IPv6 was developed by the Internet Engineering Task Force (IETF) to overcome the limitations of IPv4.\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/alu":{"title":"ALU","content":"\nALU\n\n-   What is an ALU\n\n    -   An arithmetic-logic unit is the part of a central processing unit that carries out arithmetic and logic operations on the operands in computer instruction words.\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/animations":{"title":"Animations","content":"\nAnimations\n\n\n-   Animation is a series of still images that create an illusion of motion\n ¬†\n\n-   Video takes continuous motion and it breaks it up into discrete frames but animation starts with independent pictures and puts them together to form the illusion of continuous motion\n ¬†\n\n-   2D animation figures are created and/or edited on the computer using 2D bitmap graphics or created and edited using 2D vector graphics\n ¬†\n\n-   3D animation are digitally modeled and manipulated by an animator\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/application_software":{"title":"Application Software","content":"\nApplication software\n\n-   Application software is the type of software which helps the end user to complete tasks\n\n-   Application software is designed do a specific task in a particular environment\n\n-   Application software lies above the system software and is different from system software in that it's designed for the end use and is specific in its functionality and has [[Nibm_Notes/Semester_1/Stage_1/ICS/features_of_application_software| specific features]] and there are many types of application software which are developed to do  [[Nibm_Notes/Semester_1/Stage_1/ICS/types_of_application_software|specific tasks]]\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/applications_of_multimedia":{"title":"Aplications of Multimedia","content":"\nApplications of multimedia\n\n-   World Wide Web\n\n-   [[Nibm_Notes/Semester_1/Stage_1/ICS/video_conferencing|Video Conferencing]]\n\n-    [[Nibm_Notes/Semester_1/Stage_1/ICS/streaming_media|Video on demand]]\n\n-    [[Nibm_Notes/Semester_1/Stage_1/ICS/streaming_media|Interactive TV]]\n\n-   Digital transmission\n\n-   Groupware\n\n-   [[Nibm_Notes/Semester_1/Stage_1/ICS/streaming_media|Webcasting]]\n\n-   Home shopping\n\n-   Games\n\n-   Virtual reality\n\n-   Digital video editing and production\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/audio":{"title":"Audio","content":"\nAudio\n\n¬†\n\n-   Reproduction and transmission of sound stored in a digital format\n\n-   Digital sound is stored as numerical values rather than fluctuations\n\n- There many types of  [[Nibm_Notes/Semester_1/Stage_1/ICS/file_formats#- Audio|audio formats]] example mp3, acc.\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/bios":{"title":"BIOS","content":"\nBIOS\n\n\n-   What is the BIOS\n\n    -   BIOS -- Basic input / output system\n\n\n-   What does it do\n\n    -   Boots the computer by providing a basic set of instruction\n\n    -   Loads the operating system after turning on the computer\n\n    -   Preform the POST process (Power on self-test)\n\n    -   Provide set-up program for changing bios parameters\n\n    -   Provides low-level routine to communicate between hardware and software\n\n\n-   BIOS Components\n\n    -   BIOS Rom\n\n        -   Pc startup program (POST)\n\n    -   BIOS CMOS memory (CMOS Ram)\n\n        -   Houses the configuration information of individual pc\n\n\n-   The BIOS post process\n\n    -   BIOS looks for the system files in a hard disk\n\n    -   The system files and kernel of the OS load into RAM from hard disk\n\n    -   Then the OS takes control\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/bus_topology":{"title":"Bus Topology","content":"\n-   Bus topology allows information to be directed from one computer to the other. Lots of binary collisions in the network\n- Examples \n\t- Shared landline connections \n\t- Ethernet network \n\t- Resource sharing network \n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/classes_of_transmission_media":{"title":"Classe of Transmission Media","content":"\n-   Guided (wired)\n\n    -   [[Nibm_Notes/Semester_1/Stage_1/ICS/twisted_pair_cables|Twisted-pair cable]]\n\n    -   [[Nibm_Notes/Semester_1/Stage_1/ICS/coaxial_cables|Coaxial cables]]\n\n    -   [[Nibm_Notes/Semester_1/Stage_1/ICS/optical_fibers|Fiber-optic cable]]\n\n-   Unguided (wireless)\n\n    -   Air\n\t    - Infrared \n\t    - Radio link \n\t    - Microwave link\n\t    - Satellite link\n\t    - Wi-Fi \n\t    - Bluetooth \n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/coaxial_cables":{"title":"Coaxial Cables","content":"¬†\n\n-   Coaxial cable carries signals of higher frequency ranges than twisted-pair cable.\n\n-   Coaxial Cable standards\n\n    -   RG-8, RG-9, RG-11 are used in thick [[Nibm_Notes/Semester_1/Stage_1/ICS/CAT_cables|Ethernet]]\n\n    -   RG-58 Used in thin [[Nibm_Notes/Semester_1/Stage_1/ICS/CAT_cables|Ethernet]] RG-59 Used for TV\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/components_of_computer_system":{"title":"Components of A Computer System","content":"\nComponents Of Computer System\n\n\n-   System Unit\n\n    -   Mother Board\n\n    -   Processor\n\n    -   Ram\n\n    -   VGA Adaptor\n\n    -   Hard Disk\n\n    -   Power supply\n\n\n-   Input Devices\n\n    -   Keyboard\n\n    -   Mouse\n\n    -   Microphone\n\n    -   Scanner\n\n    -   Web Cam\n\n\n-   Output Devices\n\n    -   Monitor\n\n    -   Printer\n\n    -   Speakers\n\n\n-   Input/Output Devices\n\n    -   Modem\n\n    -   Touch Screen\n\n    -   USB Drive\n\n\n-   Main elements of a mother board\n\n    -   Chipset\n\n    -   BIOS\n\n    -   Processor -- Slot or Socket\n\n    -   Memory -- Ram Slot\n\n    -   Hard Disk\n\n    -   Port\n\n    -   Expansion Slots\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/computer_generations":{"title":"Computer Generations","content":"\n\nComputer Generations\n\nMonday, September 19, 2022\n\n8:16 AM\n\n¬†\n\n|Generation|Timeline|Technology|Characteristics|Input \\ Output \\ Storage|Examples|\n|--- |--- |--- |--- |--- |--- |\n|First|1946-1958|Vacuum tubes, Machine language | High price, Very large in size, High heat generation, Hard to operate, Not reliable, High electricity consumption| Input ‚Äì punch card, Output ‚Äì printout, Storage ‚Äì Magnetic Drums|IBM 650, IBM 701, ENIAC, UNIVAC|\n|Second|1959-1964|Transistors, ASM language| Lower price, Smaller in size, Less heat generation, Easier to operate, More reliable, Less electricity consumption (in comparison to the first generation)|Input ‚Äì punch card, Output ‚Äì printout, Storage ‚Äì Magnetic cord/tape|PDP-8, IBM 1400 series, IBM 7090, IBM 7094, UNIVAC 1107, CDC 3600|\n|Third|1964-1970|Integrated circuits, First keyboard support, High level languages (C, Fortran), Operating systems (Unix, Minix), Commercial availability, Running many tasks at once(Multitasking)|Lower price, Smaller in size, Less heat generation, Easier to operate, More reliable, Less electricity consumption (in comparison to the second generation)|Input ‚Äì keyboard, Output ‚Äì monitor, printer, Storage ‚Äì large magnetic tape|PDP-11, IBM 370, IBM 360, NCR 395, B6500, UNIVAC 1108|\n|Forth|1970-1980|Microprocessors, Gui operating systems, High level operating systems, General availability| Lower price, Smaller in size, Less heat generation, Easier to operate, More reliable, Less electricity consumption (in comparison to the third generation)|Input ‚Äì pointing device, keyboard, optical scanning, Output ‚Äì monitor, printer, Storage ‚Äì Ram, Rom|IBM PC, STAR 1000, APPLE 11, APPLE Macintosh, Alter 8800|\n|Fifth|1980 to present| AI, Understand natural language, Machine learning| Portable, Small in size, Ultra-efficient, Reliable, Fast, Easy to use, High Performance, Cheap|Input ‚Äì Trackpad, pen, speech input, light scanner, mouse, keyboard, Output ‚Äì monitor, Input/Output - touchscreen, Storage ‚Äì Ram, Rom, SSD, Nvme SSD, Octane SSD|Desktops, laptops, Tablets, Smartphones|\n\n¬†\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/computer_hacking":{"title":"Computer Hacking","content":"\n\nComputer Hacking\n¬†\n\n-   What is computer hacking?\n\n    -   Computer hacking, on one hand, describes the activities practiced by individuals, organizations, and nations, in order to gain unauthorized access to computer and technology dependent systems. \n\n    -   These activities may involve the modification or alteration of system\\'s software and hardware in order to perform activities neither purposed by the creator nor in line with the creator\\'s original intentions.\n\n    - Computer hacking is a [[Nibm_Notes/Semester_1/Stage_1/ICS/cyber_crimes|cyber crime]]\n\n\n-   Types of computer hacking attacks\n\n    -   Bait and Switch\n\n        -   Using Bait and Switch hacking technique, an attacker can buy advertising spaces on the websites. Later, when a user clicks on the ad, he might get directed to a page that's infected with malware. This way, they can further install malware or adware on your computer.\n\n\n-   Cookie theft\n\n    -   The cookies in our browser store personal data such as browsing history, username, and passwords for different sites we access. Once the hacker gets access to your cookie, he can even authenticate himself as you on a browser.\n\n-   Virus, Trojan, etc.\n\n    -   Viruses or Trojans are malicious software programs that get installed into the victim's system and keep sending the victim's data to the hacker. They can also lock your files, serve fraud advertisement, divert traffic, sniff your data, or spread on all the computers connected to your network.\n\n\n4.  Phishing\n\n    -   Phishing is a hacking technique using which a hacker replicates the most-accessed sites and traps the victim by sending that spoofed link. Combined with social engineering, it becomes one of the most commonly used and deadliest attack vectors.\n\n    -   Once the victim tries to login or enters some data, the hacker gets the private information of the target victim\n\n\n5.  Denial of Service (DoS\\\\DDoS)\n\n    -   A Denial of Service attack is a hacking technique of taking down a site or server by flooding that site or server with a huge amount of traffic so that the server is unable to process all the requests in real-time and finally crashes down.\n\n\n6.  Keylogger\n\n    -   A keylogger is a simple software that records the key sequence and strokes of your keyboard into a log file on your machine. These log files might even contain your personal email IDs and passwords. Also known as keyboard capturing, it can be either software or hardware.\n\n\n-   How to not get hacked\n\n    -   Use complex passwords\n\n    -   Keep your OS, apps and browser up-to-date\n\n    -   Ignore spam\n\n    -   Back up your computer and all other devices\n\n    -   Shut your devices down if you are not using it\n\n    -   Use virtualization to isolate suspicious software\n\n    -   Secure your network with a firewall\n\n    -   Use two-factor authentication to add an extra layer of security\n\n    -   Use encryption to encrypt your files and data and keep the key a secret\n\n    -   Turn off Bluetooth if you are not using it\n\n    -   Don't use unsecured public Wi-Fi\n\n    -   Use a better passcode it\\'s better to be a passphrase\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/cost_of_networking":{"title":"Cost of Networking","content":"¬†\n\n-   Network Hardware, Software and Setup Cost\n\n-   Data security concerns\n\n-   Computer hacking\n\n-   Virus attacks\n\n-   Equipment malfunction\n\n-   System failures\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/cyber_crimes":{"title":"Cyber Crimes","content":"\n\nCyber Crimes\n\n\n-   What is cybercrimes?\n\n-   Cybercrime is any criminal activity that involves a computer ([[Nibm_Notes/Semester_1/Stage_1/ICS/computer_hacking|computer hacking]]), networked device or a network.\n\n-   About cybercrimes\n\n    -   Most cybercrimes are carried out in order to generate profit for the cybercriminals, some cybercrimes are carried out against computers or devices directly to damage or disable them\n\n\n-   Others use computers or networks to spread malware, illegal information, images or other materials. Some cybercrimes do both.\n\n\n-   These types of crimes can be used to target computers to infect them with a computer virus, which is then spread to other machines and, sometimes, entire networks\n\n\n-   Three categories of cyber crimes\n\n    -   crimes in which the computing device is the target \\-- for example, to gain network access;\n\n    -   crimes in which the computer is used as a weapon \\-- for example, to launch a denial-of-service (DoS) attack.\n\n    -   crimes in which the computer is used as an accessory to a crime \\-- for example, using a computer to store illegally obtained data.\n\n-   Types of cybercrime\n\n    -   Phishing Scams\n\n    -   Website Spoofing\n\n    -   Email and internet fraud\n\n    -   Identity fraud (where personal information is stolen and used)\n\n    -   Theft of financial or card payment data\n\n    -   Theft and sale of corporate data\n\n    -   Cyberextortion (demanding money to prevent a threatened attack)\n\n    -   Ransomware attacks (a type of cyberextortion)\n\n    -   Ransomware\n\n    -   Malware\n\n    -   Identity theft\n\n    -   Software piracy\n\n    -   Cyberespionage\n\n\u003e ¬†\n\n-   Difference between malware and ransomware\n\n    -   Malware is the general term for any program that is designed to damage, disrupt, or hack a device. Viruses and ransomware are malware. Ransomware is malicious programs that block access to your device until you pay a ransom fee to its creator. It is often very difficult and expensive to remove.\n\n\u003e ¬†\n\n-   How to Prevent Cybercrime\n\n    -   Stay Up to Date\n\n        -   Keep your software\\'s up to date\n\n        -   Keep yourself up to date about the world of cybercrime so you can have the knowledge about cybercrime.\n\n\u003e ¬†\n\n-   Be Smart with Devices\n\n    -   That computer, smart phone, tablet, and social media site you can't get enough of are also avenues for bad actors to steal data. Each device or site normally has security settings in the form of pins, passwords, and control over who sees your content. Brush up on security features and use them to your advantage.\n\n    -   And, finally, be smart. Don't share passwords, codes or pins with anyone.\n\n\u003e ¬†\n\n-   Don't Go Public If You Can\n\n    -   That free WIFI stores, restaurants, and other public places offer may be free. Keep this in mind: if it's free to you, it's also free to threat actors. Be careful entering any personal information, using apps with passwords or entering login information, because hackers can see what you're doing. The best advice is to steer clear of public WIFI, or simply don't enter any data that can be compromised.\n\n    -   Steer away from any kind of public open network.\n\n\u003e ¬†\n\n-   Don't get phished\n\n    -   If a web site, email, app or a software looks suspicious don't use it.\n\n    -   Don't give any of your personal info to suspicious looking website or email.\n\n\u003e ¬†\n\n-   Minimize Info\n\n    -   It's best to steer away from entering data like birthdates, social security numbers, and any other information tied to your identity. It leaves a digital footprint that hackers love.\n\n    -   So minimize your digital foot print.\\\n        ¬†\n\n\u003e ¬†\n\u003e\n\u003e ¬†\n\u003e\n\u003e ¬†\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/driver_software":{"title":"Driver Software","content":"\nDriver software\n\n-   A type software used to control devices plugged into the hardware and operate them.\n\n    -   Plugging a mouse\n\n    -   Plugging a keyboard\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/earliest_computers":{"title":"Earliest Computers","content":"\nEarliest Computers\n\n\n1.  Tally sticks(simply tally)\n\n    a.  This is an ancient memory aid device.\n\n    b.  It is a basic storage device\n\n\n2.  Abacus\n\n    a.  This is also called the counting frame.\n\n    b.  Used to do calculations\n\n    c.  The abacus dates at least AD 1387 / 2700 BC\n\n\n3.  Napier\\'s Bones\n\n    a.  This a manually operated calculation device.\n\n    b.  Create by John Napier\n\n    c.  Napier published his version in 1617\n\n    d.  Aided in multiplication and division.\n\n4.  Slide Rule\n\n    a.  The slide rule is mechanical analog computer\n\n    b.  Which is primarily used for multiplication, division and for functions like exponents, roots, logarithms and trigonometry.\n\n\n5.  Pascaline(arithmetic machine)\n\n    a.  This is a mechanical calculator\n\n    b.  This was invented by Blaise Pascal in 1642\n\n    c.  Operations\n\n        i.  9\\'s complement\n\n        ii. Addition\n\n        iii. Subtraction\n\n\n6.  Stepped reckoner(Leibniz calculator)\n\n    a.  This is a mechanical calculator\n\n    b.  Created by a German mathematician Gottfried Wilhelm Leibniz around 1672\n\n    c.  It was the first calculator to perform all 4 arithmetic operations\n\n\n7.  Jacquard loom\n\n    a.  The machine was patented by Joseph Marie Jacquard in 1804\n\n\n\n8.  Arithmometer\n\n    a.  The first digital mechanical calculator strong and reliable enough to be used daily in an office environment.\n\n    b.  Operations\n\n        i.  add and subtract two numbers directly\n\n        ii. Preform long multiplication\n    a.  Patented in France by Thomas de Colmar in 1820\n\n    b.  Manufactured from 1851 to 1915\n\n\n9.  Difference Engine and Analytical Engine\n\n    a.  Difference Engine\n\n        i.  Was created by Charles Babbage in 1820s\n\n        ii. This is an automatic mechanical calculator designed to tabulate polynomial functions\n        \n    b.  Analytical Engine\n\n        1.  This was proposed mechanical general-purpose computer\n\n         2. Designed by Charles Babbage in 1837 as the successor to the     difference engine\n\n        3. In modern terms it is Turing-Complete\n        \n        4. It also had memory \n\t\t    - Able to store around 675 bytes of data\n        \n\n\n10. Scheutzian calculation engine\n\n    a.  This was able rapidly calculate and print multiplication, division and exponentiation in a logarithmic table.\n\n    b.  This was invented by Per Georg Scheutz in 1837 -- 1843\n\n\n11. Tabulating\n\n    a.  Electromechanical machine designed to assist in summarizing information stored on punched cards.\n\n    b.  Invented by Herman Hollerith\n\n    c.  Developed to help process data for the 1890 U.S Census\n\n\n12. Harward Mark 1 ( ASCC \\\\ Automatic Sequence Controlled Calculator)\n\n    a.  This was a general-purpose electromechanical computer\n\n    b.  Released in 1944\n\n    c.  Project initiated by John Von Neumann\n\n\n13. Z1\n\n    a.  Motor-driven mechanical computer\n\n    b.  Designed by Konard Zuse from 1936 to 1937\n\n    c.  This was the first programable computer\n\n\n14. Atanasoff-Berry computer (ABC)\n\n    a.  The first ALU(arithmetic logic unit)\n\n    b.  Created by John Vincent Atanasoff and Clifford Berry in 1942\n\n\n15. ENIAC (Electronic Numerical Integrator and Computer)\n\n    a.  This was the first programmable, electronic, general-purpose digital computer\n\n    b.  Completed in 1945\n\n    c.  It was Turing-complete\n\n\n16. UNIVAC (Universal Automatic Computer)\n\n    a.  This was the first commercial computer\n\n\n17. EDVAC ( Electronic Discrete Variable Automatic Computer )\n\n    a.  Was one of the earliest electronic computers\n\n    b.  Successor to ENIAC\n\n\n18. Osborne 1\n\n    a.  The first portable computer\n\n    b.  Release date 1981\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/features_of_application_software":{"title":"Features of Application Software","content":"\nFeatures of Application Software\n\n-   Close to the user\n\n-   Easy to design\n\n-   More interactive\n\n-   Generally written in a high-level language\n\n-   Easy to understand\n\n-   Easy to manipulate and use\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/features_of_system_software":{"title":"Features of System Software","content":"\nFeatures of system software\n\n-   Close to the system\n\n-   Difficult to design\n\n-   Difficult to understand\n\n-   Less interactive\n\n-   Difficult to manipulate\n\n-   Generally written in low-level language\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/file_formats":{"title":"File Formats","content":"\nFile formats\n\n- ######  Audio\n\n    -   MP3\n\n    -   M4A\n\n    -   FLAC\n\n    -   WAV\n\n    -   WMA\n\n    -   AAC\n\n- ###### Image\n\n    -   JPEG/JPG\n\n    -   PNG\n\n    -   SVG\n\n    -   TIFF\n\n    -   BITMAP\n\n    -   RAW\n\n    -   GIF\n\n- ######   Video\n\n    -   MP4\n\n    -   MOV\n\n    -   WMV\n\n    -   FLV\n\n    -   AVI\n\n    -   AVCHD\n\n    -   WEBM\n\n    -   MKV\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/full_mesh_topology":{"title":"Full Mesh Topology","content":"\n¬†\n\n-   In full mesh topology all the computers in the network needs to have connections with all the other computers\n\n- Examples \n\t- Zigbee\n\t- Google home\n\t- Ring home security system \n\t- Google onehub\n\t- Data-centric fabrics\n\t- Network in military devices \n\t- Data centers \n\t- Globaly distributed transactional database systems \n\t\t- Google cloud spanner\n\t\t- IBM cloudant\n\t\t- Fauna db\n\t\t- Azure cosmos db\n\n\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/half_mesh_topology":{"title":"Half Mesh Topology","content":"\n\n-   In half mesh computers have multiple connections but not with all the computers\n\n- Examples \n\t- CDN networks (content delivery networks )\n\t- Peripheral network connected to a full mesh backbone ","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/history_of_software":{"title":"History of Software","content":"\nHistory of software\n\n-   Ada Augusta Lovelace wrote the first known computer program in 1843 for the Analytical Engine.\n\n\n-   The first modern theory of software was proposed by Alan Turing in 1935.\n\n¬†\n\n-   In the late 1950s, the first programming language emerged:\n\n    -   Fortran. Other languages soon followed, including COBOL and BASIC.\n    - Lisp is the first programming language to be interpreted and to have recursion, dynamic typing, garbage collection, first class functions and many other features we take for granted today. linked list is a major data structure in lisp.\n\n¬†\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/how_to_get_software":{"title":"How to Get Software","content":"\nHow to get software\n\n-   Software can be purchased from a retail computer store or online and it comes in box containing all the disks, manuals, warranty and other documentation\n\n-   Or software can be downloaded over the internet\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/how_to_maintain_software":{"title":"How to Maintain Software","content":"\nHow to maintain software\n\n-   After software installation, updates and patches needs to be installed\n\n-   All ways install security updates in time\n\n-   If you find a bug inform the developer\n\n-   Install legitimate software\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/hypermedia":{"title":"Hypermedia","content":"\n\nHypermedia\n\n-   Not constrained to text it can include other media which navigational capabilities\n\n\n-   The  [[Nibm_Notes/Semester_1/Stage_1/ICS/world_wide_web|World Wide Web]] is the best example for hypermedia application\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/hypertext":{"title":"Hypertext","content":"\nHypertext\n\n-   A text which contains links to other texts for quick navigation\n\n-   The term was invented by Ted Nelson around 1965\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/images":{"title":"Images","content":"\nImages\n\n-   Turning on and off a monitor pixel could create alpha numerical characters in the early days this method was used to display images\n\n\n-   All computers create colors by mixing Red, Green, Blue\n\n\n-   PPI is pixels in a linear inch\n\n\n-   Good quality picture is 300ppi\n\n\n- There are many types of  [[Nibm_Notes/Semester_1/Stage_1/ICS/file_formats#- Image|image formats]] example png, jpg.\n\n-   Image types\n\n    -   Raster\n\n    -   Vector\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/linear_media":{"title":"Linear Media","content":"\nLinear\n\n-   Linear active content progresses without any navigational control for the viewer\n\n-   Examples\n\n    -   Cinema presentation\n\n    -   A movie in movie theater\n\n    -   A novel\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/local_area_network_LAN":{"title":"Local Area Network (LAN)","content":"¬†\n\n-   A local area network covers a small geographic area, like a home, office or a group of buildings\n\n    -   Networking in home, office. Networking in school, laboratory, university campus. Networking between two computers.\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/main_areas_of_IT_Law":{"title":"Main Areas of IT Law","content":"\nMain Areas Of IT Law\n\n1.  **Electronic commerce** the  [[Nibm_Notes/Semester_1/Stage_1/ICS/IT_related_legislations_in_Sri_Lanka#2 Electronic Transactions Act|electrocin transcation act]]  and  [[Nibm_Notes/Semester_1/Stage_1/ICS/IT_related_legislations_in_Sri_Lanka#3 Digital Signature and Authentication Regime| digital signature and authentication regime]] supports this.\n\n\u003e Provision of information-society services, validity of online contracts, consumer protection, e-contract integrity and authenticity, contracts made by software agents, electronic procurement, providers' liability.\n\u003e\n\u003e ¬†\n\n2.  **Electronic signatures and documents** the  [[Nibm_Notes/Semester_1/Stage_1/ICS/IT_related_legislations_in_Sri_Lanka#2 Electronic Transactions Act|electrocin transcation act]]  and  [[Nibm_Notes/Semester_1/Stage_1/ICS/IT_related_legislations_in_Sri_Lanka#3 Digital Signature and Authentication Regime| digital signature and authentication regime]] supports this.\n\n\u003e Use of cryptography-based electronic signatures for identification and confidentiality purposes, the legal and evidentiary force of electronic documents, electronic and optical archiving, electronic invoicing.\n\u003e\n\u003e ¬†\n\n3.  **Privacy and data protection**  the [[Nibm_Notes/Semester_1/Stage_1/ICS/IT_related_legislations_in_Sri_Lanka#1 Data Protection Act|data protection act]] supports this.\n\n\u003e Processing of personal data and protection of the privacy rights of natural and legal persons, data processing made through electronic means, security aspects and technological measures. Privacy Enhancing Technologies.\n\u003e\n\u003e ¬†\n\n4.  Intellectual Property Rights (IPR) the [[Nibm_Notes/Semester_1/Stage_1/ICS/IT_related_legislations_in_Sri_Lanka#6 Intellectual Property Rights IPR|intellectual property rights act]] supports this\n\n\u003e Software, databases, multimedia, opensource software and open standards, Digital Rights Management (DRM) and technological protection measures, protection of users' rights, Internet and new media (electronic publishing, linking, framing, P2P), domain names.\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/main_makeup_of_multimedia":{"title":"Main Makeup of Multimedia","content":"\nMain makeup of multimedia\n\n\n-   [[Nibm_Notes/Semester_1/Stage_1/ICS/text|Text]]\n\n-   Graphics \n\n-   [[Nibm_Notes/Semester_1/Stage_1/ICS/audio|Audio]]\n\n-   [[Nibm_Notes/Semester_1/Stage_1/ICS/video|Video]]\n\n-   [[Nibm_Notes/Semester_1/Stage_1/ICS/animations|Animations]]\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/malware":{"title":"Malware","content":"\nMalware\n\n-   Malware is software which is designed to act in harmful ways\n\n-   When infected it can make a computer and it's software misbehave or to stop working completely\n\n-   Examples\n\n    -   Virus\n\n    -   Worms\n\n    -   Trojans\n\n    -   Ransom ware\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/mesh_topology":{"title":"Mesh Topology","content":"\n\n¬†\n\n-   Computers are connected in a mesh multiple interconnections between each computer\n\n-   There area two types of mesh topologies\n\n    -   [[Nibm_Notes/Semester_1/Stage_1/ICS/full_mesh_topology|Full mesh topology]]\n\n    -   [[Nibm_Notes/Semester_1/Stage_1/ICS/half_mesh_topology|Half mesh topology]]\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/metropolitan_area_network_MAN":{"title":"Metropolitan Area Network (MAN)","content":"¬†\n\n-   This type of network interconnects computers in a geographic area which is larger than [[Nibm_Notes/Semester_1/Stage_1/ICS/local_area_network_(LAN)|LAN]] but smaller than [[Nibm_Notes/Semester_1/Stage_1/ICS/wide_area_network_(WAN)|WAN]] \n\n    -   Telephone company network that can provide a high-speed DSL line to the customer or the cable TV network in a city.\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/more_types_of_networks":{"title":"More Types of Networks","content":"¬†\n\n-   Storage area network (SAN)\n\n-   Campus area network (CAN)\n\n-   Personal area network (PAN)\n\n-   Body area network (BAN)\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/multimedia_application":{"title":"Multimedia Application","content":"\nMultimedia Application\n\n\n-   A multimedia application which is an application which uses a collection of multiple media resources there is [[Nibm_Notes/Semester_1/Stage_1/ICS/main_makeup_of_multimedia|main makeup for these types of applications]]\n\n    -   Audio\n\n    -   Text\n\n    -   Images\n\n    -   Graphics\n\n    -   Animations\n\n    -   Video\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/multimedia_categories":{"title":"Multimedia Categories","content":"\nMultimedia categories\n\n\n-   [[Nibm_Notes/Semester_1/Stage_1/ICS/linear_media|Linear]]\n\n-   [[Nibm_Notes/Semester_1/Stage_1/ICS/non_linear_media|Non-linear]]\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/multimedia_use_cases":{"title":"Multimedia Use Cases","content":"\nMultimedia used in\n\n\n-   Advertisements\n\n-   Medicine\n\n-   Art\n\n-   Education\n\n-   Entertainment\n\n-   Engineering\n\n-   Mathematics\n\n-   Business\n\n-   Scientific research\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/network_communications_protocols":{"title":"Networks Communications Protocols","content":"¬†\n\n-   A protocol is simply an agreed-on set of rules and procedures for transmitting data between two or more devices [[Nibm_Notes/Semester_1/Stage_1/ICS/open_system_interconnection_7_model_(OSI 7)|OSI 7 Model]]\n\n-   Features determined by the protocol are\n\n    -   How the sending device indicates it has finished sending the message\n\n    -   How the receiving devices indicates it has received the message\n\n    -   The type of error checking to be used\n    \n    - The way the data synchronized, the semantics, rules and syntax \n\n    -   Examples\n\n        -   HTTP\n\n        -   FTP\n\n        -   IP\n\n        -   TCP\n\n        -   UDP\n\n        -   SMTP\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/network_definition":{"title":"Network Definition","content":"\n¬†\n\n-   A network is two or more computer connected together using a connection medium in such a way that they can share resources\n-   Purpose of the network is to [[Nibm_Notes/Semester_1/Stage_1/ICS/network_shared_resources|share resources]]\n-  [[Nibm_Notes/Semester_1/Stage_1/ICS/networking|Networking]] is the process of creating and maintaining networks","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/network_devices":{"title":"Network Devices","content":"¬†\n\n-   Network Interface Card (NIC) (LAN card)\n\n    -   Connection between the network and the computer bus\n\n    -   Have built-in transceiver, for data transmitting and receiving\n\n    -   Usually 100 MB/s\n\n\n-   Wireless LAN card\n\n    -   Usually 11 MB/s\n\n    -   Work within the distance range, and no blocking in between.\n\n\n-   Connectors\n\n    -   RJ-45\n\n        -   For connecting twisted pairs [[Nibm_Notes/Semester_1/Stage_1/ICS/CAT_cables|LAN cable]]\n\n    -   RJ-11/13\n\n        -   For connecting telephone lines\n\n    -   BNC connector\n\n        -   For connecting coaxial cables\n\n\n-   Hub\n\n    -   To connect the workstations within a room on same floor\n\n\n-   Switch\n\n    -   To connect the workstations for different floors in a building, it is faster and more efficient than a Hub\n\n\n-   Router\n\n    -   To connect different LANs together to form a Wide Area Network (WAN)\n\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/network_shared_resources":{"title":"Network Shared Resources","content":"\n¬†\n\n-   A file, folder, printer, disk drive or anything else that can exist in a computer\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/network_wiring":{"title":"Network Wiring","content":"\n-   Standard network cable\n\n-   Crossover network cable\n\n    -   Used for connecting two PCs directly\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/networking":{"title":"Networking","content":"¬†\n\n-   This is the process of designing, implementing, upgrading and managing networks and network technologies\n- There are significant amount of  [[Nibm_Notes/Semester_1/Stage_1/ICS/networking_benefits|benefits]] and [[Nibm_Notes/Semester_1/Stage_1/ICS/cost_of_networking|costs]] to networking\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/networking_benefits":{"title":"Networking Benifits","content":"\n¬†\n\n-   Information Sharing\n\n    -   Authorized user can use other computers on the network to access and share information\n\n        -   Group projects\n\n        -   Databases\n\n\n-   Hardware Sharing\n\n    -   One device in the network can be used by many computers\n\n        -   Printers\n\n        -   Scanners\n\n\n-   Software Sharing\n\n    -   Software can be installed in a centralized server and shared between computers\n\n\n-   Collaborative environments\n\n    -   User can work on group projects by combining the diverse capability of equipment\\'s in the network\n\n\n-   Internet access and sharing\n\n    -   Browse the web to access resources and share information\n\n\n-   Data security and management\n\n    -   Secure online data vaults and stores can be used to store data\n\n\n-   Performance Enhancements and balancing\n\n    -   Shared environments reduces the cost improves performance and enables balance\n\n        -   Cloud computing\n\n        -   Distributed Computing\n\n\n-   Entertainment\n\n    -   Online movies, music, games, social media","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/non_linear_media":{"title":"Non Linear Media","content":"\nNon-linear\n\n\n-   Non-linear content offers user interactivity to control progress\n- Few types of non-linear content \n\t- [[Nibm_Notes/Semester_1/Stage_1/ICS/hypertext|Hypertext]]\n\t- [[Nibm_Notes/Semester_1/Stage_1/ICS/hypermedia|Hypermedia]]\n\n\n-   Examples\n\n    -   Video games\n\n    -   A movie in Netflix\n\n    -   A Wikipedia article\n\n    -   A dictionary\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/open_system_interconnection_7_model_OSI-7":{"title":"Open System Interconnection 7 Model (OSI 7)","content":"\n ## The 7 layers of the open system interconnection (OSI) Model are\n \n- Layer 1 - Physical\n- Layer 2 - Datalink \n- Layer 3 - Network \n- Layer 4 - Transport \n- Layer 5 - Session \n- Layer 6 - Presentation\n- Layer 7 - Application ","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/operating_system_OS":{"title":"Operating System (OS)","content":"\n\nOperating system (OS)\n\n-   An [[Nibm_Notes/Semester_1/Stage_1/ICS/operating_system_(OS)|operating system (OS)]] is a software program that serves as the interface between other applications and the hardware on a computer or mobile device\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/optical_fibers":{"title":"Optical Fibers","content":"¬†\n\n-   Optical fiber is made of glass or plastic and transmits signals in the form of light.\n ¬†\n\n-   Fiber construction\n\n![](Nibm_Notes/Semester_1/Stage_1/ICS/assets/029_Optical_fibers_000.png)\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/parts_of_an_IP_address":{"title":"Parts of An IP Address","content":"¬†\n #### [[Nibm_Notes/Semester_1/Stage_1/ICS/parts_of_an_IP_address_in_detail|Network]]\n\t- A unique number that is assigned to your network \n ####  [[Nibm_Notes/Semester_1/Stage_1/ICS/parts_of_an_IP_address_in_detail|Hosts]]\n\t- This is a unique address which assigned to each host in the network \n\t- It uniquely identifies these machines in the network \n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/parts_of_an_IP_address_in_detail":{"title":"Parts of An IP Address in Detail","content":"\n¬†\n\n-   A Subnet mask is a 32-bit number that masks an IP address.\n\n-   Also divides the IP address into network address and host address.\n\n\u003e ¬†\n\u003e\n\u003e ![Eg: 1101 1000 ¬∑ 0000 0011 ¬∑ 1000 0000 ¬∑ 0000 1100 Mask: 1111 1111 ¬∑ 1111 1111 ¬∑ 1111 1111 ¬∑ 00000000 NW: 1101 1000 ¬∑ 0000 0011 ¬∑ 1000 0000 ¬∑ 0000 0000 IP Subnet Mask Network Part 216 ¬∑ 3 ¬∑ 128 ¬∑ 12 255 ¬∑ 255 ¬∑ 255 ¬∑ 0 Host Part ( 216 ¬∑ 3 ¬∑ 128 ¬∑ 12 ) ( 255 ¬∑ 255 ¬∑ 255 ¬∑ 0 ) ( 216 ¬∑ 3 ¬∑ 128 ¬∑ 0 ) ](Nibm_Notes/Semester_1/Stage_1/ICS/assets/021_Subnet_Mask_000.png){width=\"4.291666666666667in\" height=\"1.7291666666666667in\"}\n\n¬†\n\n¬†\n\n-   Broadcast address is the last host address\n\n    -   Broadcast Address - 11111111\n\n\n-   Network address is the first host address\n\n    -   Network Address - 00000000\n\n-   Calculate the amount of host on a network\n\n    -   2\\^n\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/photoshop_shortcuts":{"title":"Photoshop Shortcuts","content":"\nPhotoshop shortcuts\n\n\n-   Copy - Ctrl + C or F3\n\n-   Cut - Ctrl + X or F2\n\n-   Paste - Ctrl + V or F4\n\n-   Undo - Ctrl + Z\n\n-   Redo - Shift + Ctrl + Z\n\n-   Zoom In - Ctrl + +\n\n-   Zoom Out - Ctrl + -\n\n-   Fit on screen - Ctrl + O\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/popular_software_vendors":{"title":"Popular Software Vendors","content":"\nPopular software vendors\n\n-   Microsoft\n\n-   Oracle\n\n-   SAP\n\n-   Sales force\n\n-   Adobe\n\n-   Google\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/programming_software":{"title":"Programing Software","content":"\nProgramming software\n\n\n-   A type of software that isn't used by the end use\n\n\n-   It's used by programmers who are writing code\n\n\n-   Programming software is a program that is used to write, develop, test, and debug other software, including application and system software \n\n- There are many types of  [[Nibm_Notes/Semester_1/Stage_1/ICS/programming_software_used_by_programmers|programming softwares used by programmers]] like linkers.\n\n\n-   These programs serve as a sort of translator. It takes high-level programming languages such as Python or C++ and translates it into something a computer will understand\n\n-   Beside simplifying code it also\n\n    -   Assigns data storage\n\n    -   Enlists source code as well as program details\n\n    -   Offers diagnostic reports\n\n    -   Rectifies system errors during runtime\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/programming_software_used_by_programmers":{"title":"Programing Software Used by Programmers","content":"\nProgramming software used by programmers\n\n-   Compiler\n\n    -   Programs that convert the code written by humans into a lower-level form of machine code that\\'s directly interpretable by computer hardware\n\n\n-   Debugger\n\n    -   Programs used to test and \\\"debug\" (find and remove errors) from computer code\n\n\n-   Linkers\n\n    -   Programs that take then out put from the compiler and combines them into a single file executable that can run without a programming environment\n\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/ring_topology":{"title":"Ring Topology","content":"\n\n-   Ring topology uses a token to pass information from one computer to the other\n\n-   A token is attached by the sender to the message to identify which computer needs to receive the message\n\n-   As the message moves around each computer examines the token if it identifies the token as it's own it will process the information\n\n-   Examples\n\n    -   Local area networks\n\n    -   Metropolitan area networks\n\n    -   Synchronous optical networks (for telephone and massive data transfers)\n\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/software_distribution_strategies":{"title":"Software Distribution Strategies","content":"\nSoftware distribution strategies\n\n-   Commercial\n\n    -   Any program you purchased and got a physical or digital copy of a commercial software. You don't own the software but you have a license for it.\n\n-   Open-source\n\n    -   Usually made available with all its source code\n\n    -   Which allows an entire community of coders to improve, update and modify the program\n\n-   Freeware\n\n    -   The software is distributed to the user for and most of the time it will have embedded advertising and personal data collection\n\n    -   Software has no restrictions while open-source software does apply a few restrictions to the users sometimes\n\n-   Shareware\n\n    -   A variation of freeware, share ware is free for a limited time\n","lastmodified":"2022-11-26T15:24:38.463427295Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/software_examples":{"title":"Software Examples","content":"\nSoftware examples\n¬†\n-   Word processor\n\n    -   Microsoft word\n\n    -   Google docs\n\n    -   Apple works\n\n-   Spread sheet\n\n    -   Microsoft excel\n\n    -   Google sheets\n\n-   Graphics\n\n    -   Adobe photoshop\n\n    -   CorelDRAW\n\n    -   Picasa\n\n    -   Gimp\n\n    -   Davinci Resolve\n\n-   Internet Browser\n\n    -   Firefox\n\n    -   Chrome\n\n    -   IE\n\n    -   Edge\n\n    -   Brave\n\n-   Operating system\n\n    -   Android\n\n    -   iOS\n\n    -   Linux\n\n    -   Windows\n\n    -   ChromeOS\n\n-   Anti-virus\n\n    -   AVG\n\n    -   McAfee\n\n    -   Norton\n\n-   Email\n\n    -   Outlook\n\n    -   Gmail\n\n    -   Hotmail\n\n    -   Proton mail\n\n-   Database software\n\n    -   MySQL\n\n    -   PostgreSQL\n\n    -   SQL server\n\n    -   MongoDB\n\n-   Application software\n\n    -   Microsoft office 365\n\n    -   Adobe creative cloud\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/software_vs_hardware":{"title":"Software Vs Hardware","content":"\nSoftware vs Hardware\n\n¬†\n\n-   Computer software and hardware require each other -- neither can be used on its own\n\n-   Hardware wears out with time, software does not\n\n-   Hardware only understands machine level language. Software takes input in human-readable languages and transforms it to machine level language\n\n-   Software can be easily created, changed or deleted, whereas switching out hardware takes greater skill and is typically more expensive to do.\n\n¬†\n\n||Software|Hardware|\n|--- |--- |--- |\n|Definition|A set of instruction data or Programs used to operate hardware|Hardware is a physical device which understand machine language|\n|Types|System software, Programming software, Application software|Input, storage, control and output devices|\n|Faults|Bug, scams, optimization, vulnerability, memory leak (systematic fault)|Hardware failure is random|\n|Function|Provide instructions to hardware|Preforms the tasks on machine level|\n|Durability|Relatively higher than hardware, bugs may arise|Durable for a limited time|\n|Examples|Google chrome, Microsoft word,Microsoft excel,Adobe photoshop,Apple notes|CPU, hard drive, ram, VGA|\n\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/star_topology":{"title":"Star Topology","content":"\n\n¬†\n\n-   Star topology is the most common type used. All computers are attached to a hub. Less collision and more efficient\n\n- Examples \n\t- Airport \n\t- Banks\n\t- Educational institutes \n\t- Government institutions ","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/streaming_media":{"title":"Streaming Media","content":"\nStreaming media\n¬†\n-   Video on Demand\n\n-   Interactive TV\n\n-   Streaming providers\n\n    -   Netflix\n\n    -   Disney+\n\n    -   Hulu\n\n    -   Spotify\n\n    -   YouTube TV\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/system_software":{"title":"Software Software","content":"\nSystem software\n\n\n-   System software helps the user, hardware, and application software interact and function with each other\n\n-   System software is a mediator or middle layer between the hardware and the user\n\n-   It's essential in managing the whole computer system -when a computer is first turned on, it's the system software that is initially loaded into memory\n\n-   Unlike application software, system software isn't used by end users. Instead, it runs in the background of a device\n\n- System software are more general purpose and not intuitive to work with and they have [[Nibm_Notes/Semester_1/Stage_1/ICS/features_of_system_software|general set of features]] and They are built for general purpose functionality and there are many [[Nibm_Notes/Semester_1/Stage_1/ICS/types_of_system_software|types of system software]] Like assemblers to turn assembly language into machine language.\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/technicians_toolkit":{"title":"Technicians Toolkit","content":"\n- Anti-static Wrist Strap and Mat\n- Compressed Air\n- Extraction Tool\n- Phillips Head Screwdriver\n- Torx Driver\n- Cable \n- Crimpers","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/text":{"title":"Text","content":"\nText\n¬†\n\n-   When PCs were in their start(MS-DOS) they were only capable of only displaying text\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/transmission_media":{"title":"Transmission Media","content":"¬†\n\n- The transmission medium is the physical path by which a message travels from sender to receiver.\n\n¬†\n\n-   Computers and telecommunication devices use signals to represent data.\n\n¬†\n\n-   These signals are transmitted from a device to another in the form of electromagnetic energy.\n- There are two types of transmission  media \n\t- Guided media \n\t\t- [[Nibm_Notes/Semester_1/Stage_1/ICS/twisted_pair_cables|Twisted pair cables]]\n\t\t- [[Nibm_Notes/Semester_1/Stage_1/ICS/coaxial_cables|Coaxial cables]]\n\t\t- [[Nibm_Notes/Semester_1/Stage_1/ICS/optical_fibers|Fiber optic cables]] \n\t- Unguided media \n\t\t- WI-FI \n\n¬†\n\n-   Examples\n\n    -   power, radio waves, infrared light, visible light, ultraviolet light, and X and gamma rays.\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/twisted_pair_cables":{"title":"Twisted Pair Cables","content":"\n¬†\n\n- Twisted pair consists of two conductors (normally copper), each with its own plastic insulation, twisted together\n\n-   Twisted-pair cable comes in two forms\n\n    -   Unshielded (UTP)\n    \n\t    - Unshielded twisted pair cable has each pair of wires twisted together. Those wires are then wrapped in tubing without any other protection\n\n\t        -   Used in phone lines and networks\n\n    -   Shielded (STP)\n\n\t    - Shielded twisted pair has individual pairs of wires wrapped in foil which are the wrapped again for double protection\n\t    \n\t        -   Used in phone lines and networks ¬†\n\n-   The twisting helps to reduce the interference (noise) and crosstalk.\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/types_of_IP_address":{"title":"Types of IP Address","content":"\n¬†\n\n-   There are 5 types of IP address\n\n    -   A - 1.0.0.0 to 127.255.255.255\n\n    -   B - 128.0.0.0 to 191.255.255.255\n\n    -   C - 192.0.0.0 to 223.255.255.255\n\n    -   D - 224.0.0.0 to 239.255.255.255\n\n    -   E - 240.0.0.0 to 255.255.255.255\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/types_of_application_software":{"title":"Types of Application Software","content":"\nTypes of application software\n\n\n-   Word processor\n\n    -   Microsoft word\n\n    -   Google docs\n\n    -   Apple works\n\n-   Spread sheet\n\n    -   Microsoft excel\n\n    -   Google sheets\n\n-   Graphics\n\n    -   Adobe photoshop\n\n    -   CorelDRAW\n\n    -   Picasa\n\n    -   Gimp\n\n    -   Davinci Resolve\n\n-   Internet Browser\n\n    -   Firefox\n\n    -   Chrome\n\n    -   IE\n\n    -   Edge\n\n    -   Brave\n\n-   Operating system\n\n    -   Android\n\n    -   iOS\n\n    -   Linux\n\n    -   Windows\n\n    -   ChromeOS\n\n-   Anti-virus\n\n    -   AVG\n\n    -   McAfee\n\n    -   Norton\n\n-   Email\n\n    -   Outlook\n\n    -   Gmail\n\n    -   Hotmail\n\n    -   Proton mail\n\n-   Database software\n\n    -   MySQL\n\n    -   PostgreSQL\n\n    -   SQL server\n\n    -   MongoDB\n\n-   Application software\n\n    -   Microsoft office 365\n\n    -   Adobe creative cloud\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/types_of_networks":{"title":"Types of Networks","content":"\n-  [[Nibm_Notes/Semester_1/Stage_1/ICS/local_area_network_(LAN)|Local Area Networks (LAN)]]\n\n-  [[Nibm_Notes/Semester_1/Stage_1/ICS/metropolitan_area_network_(MAN)|Metropolitan Area Network (MAN)]]\n\n-  [[Nibm_Notes/Semester_1/Stage_1/ICS/wide_area_network_(WAN)|Wide Area Network (WAN)]]","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/types_of_operating_systems_OS":{"title":"Types of Operating Systems (OS)","content":"\nTypes of OS\n\n\n-   Desktop OS\n\n    -   Windows\n\n        -   Windows is a family of proprietary graphical operating system developed and maintained by Microsoft. Different versions of Windows are used in different sectors\n\n            -   Windows NT for consumers\n\n            -   Windows Pro for professional\n\n            -   Windows workstation for Power users\n\n            -   Windows server for enterprise business and cloud provider\n\n            -   Windows IoT for embedded systems and IoT devices\n\n        -   Most of the worlds consumer computers run on windows\n\n    -   MacOS\n\n        -   MacOS is a proprietary graphical operating system based on Unix built by apple and run's on apple's Mac computers. It can only be used on Apple Mac devices. It's the second most popular operating system in the world.\n\n        -   MacOS is known to have a really good user interface and it also has a really good user experience.\n\n        -   It is also preferred by creatives and power users because of its really good first party application support and reliability.\n\n    -   Linux\n\n        -   This is operating system developed by a community of developers.\n\n        -   Linux is complete free to use and you can modify it's source code, fix bugs, add new features or even build your own flavor of Linux.\n\n        -   Linux was built as an open source alternative to Unix.\n\n        -   Linux is a combination of the GNU project and the Linux kernel.\n\n        -   The GNU project by Richard Stallman recreated most of the tools which were originally on Unix because the Unix code base was owned by the telecommunication giant AT\u0026T.\n\n        -   The Linux kernel was developed by Linus Torvalds it was used with the GNU project to create the full Linux operating system.\n\n        -   Linux can be GUI based or it can completely be used using the command line interface\n\n        -   Linux is the least popular operating system in the consumer market.\n\n        -   Linux is the most popular operating system in the server computing, cloud computing and enterprise market because of its high reliability and flexibility.\n\n        -   Linux can be modified to the consumer specific use cases. Linux can be updated on the fly without downtime or system restart's.\n\n        -   Linux has many flavour\\'s which are built different purposes\n\n            -   RedHat enterprise Linux used by enterprise customer known for it's great security and extreme reliability\n\n            -   Open Suse used for cloud computing and enterprise applications\n\n            -   Ubuntu used by general users and has a GUI interface and it is user friendly and supported by a company called canonical\n\n        -   Linux is a engine which you can use to build your own car.\n\n-   MobileOS\n\n    -   Android\n\n        -   Android is the most used mobile operating system in the world.\n\n        -   Andy Rubin and Rich Miner created the android operating system.\n\n        -   The android operating system is based on Linux.\n\n        -   The core android operating system is open source.\n\n        -   Android is mostly used on mobile phones, tablets and smart watches and other smart devices\n\n        -   Android was acquired by google and now a part of the alphabet corporation googles parent company\n\n    -   iOS\n\n        -   iOS is a proprietary mobile operating system developed by apple to run on there own Apple iPhones.\n\n    -   IPadOS\n\n        -   It is a rebranded version of iOS optimized for the iPad to run in a tablet landscape\n\n-   Desktop cloud oriented operating systems\n\n    -   ChromeOS\n\n        -   Google attempt at breaking into the desktop operating system market.\n\n        -   ChromeOS is based on the googles chromium project and uses chrome as a user interface and uses Linux as the underlying operating system.\n\n        -   It mainly runs on chrome books.\n\n        -   ChromeOS pushes most of the tasks done in a computer to the cloud.\n\n        -   ChromeOS is really light weight and runs on relatively low powered hardware.\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/types_of_system_software":{"title":"Types of Systems Software","content":"\nTypes of system software\n\n\n-   Basic input/output system (BIOS)\n\n    -   The built-in firmware that determines what a computer can do without accessing programs from a disk\n\n-   Boot\n\n    -   Loads the OS into the computers main memory or RAM\n\n-   Assembler\n\n    -   Takes basic instructions and converts them into a pattern of bits that the processor can use perform basic operations\n\n-   Device drivers\n\n\u003e Controls a particular type of device attached to the computer, such as a keyboard or mouse\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/upcoming_IT_industries_in_Sri_Lanka":{"title":"Upcoming IT Industries in Sri Lanka","content":"\nUpcoming I.T industries in Sri Lanka\n\n-   E-commerce industry is a highly anticipated upcoming industry in Sri Lanka. As more and more people have been purchasing items online using services online . The market for e-commerce and supporting industries have emerged rapidly.\n\n    -   Examples\n\n        -   Kapruka\n\n        -   Daraz\n\n        -   And supporting industries like\n\n            -   payment processors\n\n            -   visual websites builders\n\n            -   Analytic providers\n\n            -   headless e-commerce engine\n\n\n-   A.I technologies also have been a growing market in Sri Lanka the company which building a.I model's are using the for chat bots, stock market predictions and all sorts of other operations. Like building fraud detection models.\n\n\n-   Enterprise software development is a sector we're companies build software for enterprise customers.These software companies help other companies to modernize there technologies and improve there efficiency by optimizing workflow's and automating repetitive tasks\n\n\n-   E-health is a upcoming industry in Sri Lanka. E-health can improve the efficiency of the the health industry. This can help users to easily get doctors appointments using an application and also gives the ability for the doctor to get to know the patient because the application can hold a history of the patients medical history.\n\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/utility_software":{"title":"Utility Software","content":"\nUtility software\n\n¬†\n-   Utility software is software designed to help analysis, configure, optimize or maintain a computer. It is used to support the computer infrastructure\n\n\n-   Examples\n\n    -   Antivirus\n\n    -   File management system\n\n    -   Disk management systems\n\n    -   Compression tools\n\n    -   Disk cleanup tools\n\n    -   Disk defragmenter\n\n    -   Backup utility\n\n    -   Package managers\n\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/video":{"title":"Video","content":"\nVideo\n\n\n-   video is created by a photographic process and converted or ported to a computer in sets of Frames where each frame has data stored in every pixel\n\n-   Video is measured in FPS\n\n- There are many [[Nibm_Notes/Semester_1/Stage_1/ICS/file_formats#- Video|video file formats]] example mp4, avi.\n\n-   Digital video can be copied with no degradation in quality\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/video_conferencing":{"title":"Video Conferencing","content":"\nVideo conferencing\n\n-   Transmission of synchronized images and verbal communications between two or more user in two or more locations as if them being in the same room\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/what_is_a_computer_network":{"title":"What is a Computer","content":"\nWhat is a computer network\n\n\n-   A computer [[Nibm_Notes/Semester_1/Stage_1/ICS/network_definition|network]] is inter connection of two or more computers using a connection medium in a way that computers can share resources.\n\n\n-   In a computer networking a computer is a host or node that we use for connectivity of the network.\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/what_is_a_computer_network-1":{"title":"What is A Computer Network","content":"\n-   A simple  [[Nibm_Notes/Semester_1/Stage_1/ICS/network_definition|definition for network ]] is two or more computer that are linked together ","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/what_is_a_computer_system":{"title":"What is a Computer System","content":"\nWhat Is Computer System\n\nA computer system is a set of hardware used for executing software\n\n- Definition of a computer changes accordingly \n\t-  [[Nibm_Notes/Semester_1/Stage_1/ICS/what_is_ict#- Definition of a computer related to ICT|According to ICT what is a computer]]\n\t-  [[Nibm_Notes/Semester_1/Stage_1/ICS/what_is_computer_science#- Definition of a computer related computer science|According to Computer Science what is a computer]]","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/what_is_computer_science":{"title":"What is Computer Science","content":"\nWhat is Computer Science\n\n-   Computer science is the design and development of new software applications and optimization of existing software or components and implementation of new communication systems.\n\n###### -   Definition of a computer related computer science\n\n    -   There are three main subsystems in a computer system\n\n        i.  CPU system\n\n        ii. Memory Subsystem\n\n        iii. I/O Subsystem\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/what_is_ict":{"title":"What is ICT","content":"\nWhat Is ICT\n\n-   ICT is the use of already developed software applications hardware components and communication systems.\n\n###### -   Definition of a computer related to ICT\n\n    -   A computer system has four main components\n\n        i.  Hardware (I/O)\n\n        ii. Software (OS)\n\n        iii. Live Ware (users)\n\n        iv. Firm Ware (built in chipset)\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/what_is_multimedia":{"title":"What is Multimedia","content":"\nWhat is multimedia\n\n\n-   Multimedia is the field concerned with the computer controlled integration of text, graphics, drawings, still and moving images, animations, audio and any other form of media which can be stored, represented, processed and transmitted digitally\n\n-   Multimedia includes a combination of text, audio, still images, animation, video, and interactivity content forms these are called [[Nibm_Notes/Semester_1/Stage_1/ICS/multimedia_application|multimedia applications]]\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/what_is_software":{"title":"What is Software","content":"\nWhat is software\n\n-   Software is a set of instructions, data, or programs used to operate a computer and execute specific tasks\n\n-   In simple terms software tells a computer how to function \n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/wide_area_network_WAN":{"title":"Wide Area Network (WAN)","content":"\n¬†\n\n-   This type of network covers a broad area\n\n-   WANs are used to connect [[Nibm_Notes/Semester_1/Stage_1/ICS/local_area_network_(LAN)|LANs]] and other types of networks\n\n-   The largest and most well-known WAN is the [[Nibm_Notes/Semester_1/Stage_1/ICS/world_wide_web|internet]] \n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/ICS/world_wide_web":{"title":"World Wide Web","content":"\nWorld Wide Web\n\n\n-   Multimedia incorporates different media\n\n    -   sound, images, video etc.\n\n-   The world wide web is a global hypermedia system\n\n-   Applications of hypermedia include online help, education and e-commerce\n\n-   Dynamic web content can be used for simple online demonstration or for complete web-based business applications\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/MC/cartesian_product":{"title":"Cartesian Product","content":"\nCartesian product\n\n-   The¬†cartesian product¬†is the all ordered pairs of two or more sets.\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/MC/difference_between_permutation_and_combination":{"title":"Difference between Permutation and Combination","content":"\n- A [[Nibm_Notes/Semester_1/Stage_1/MC/what_is_permutation|permutation]] has to have an order and a [[Nibm_Notes/Semester_1/Stage_1/MC/what_is_combination|combination]] doesn't have an order.\n\n- A combination is a subset of the permutation\n\n- A permutation has a higher number of values than a combination ","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/MC/function_math":{"title":"Function","content":"\nFunction\n\n-   A function is a relation in which there is only one output for each input¬†\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/MC/reflexive":{"title":"Reflexive","content":"\nReflexive\n\n-   A relation is reflexive if every element is related to itself\n\n    -   (a, a) ‚Ç¨ R\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/MC/relation":{"title":"Reflexive","content":"\nRelation\n\n-   A relation is relationship between sets of values, or it is a subset of the Cartesian product¬†\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/MC/symmetric":{"title":"Reflexive","content":"\nSymmetric\n\n-   A relation is symmetric if for every (a, b) ‚Ç¨ R it needs to be (b, a) ‚Ç¨ R, it is twin of().","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/MC/transitive":{"title":"Transitive","content":"\nTransitive\n\n-   A relation is transitive if for every (a, b) ‚Ç¨ R and (b, c) ‚Ç¨ R the (a, c) ‚Ç¨ R\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/MC/what_is_combination":{"title":"What is Combination","content":"\nWhat is combination\n\n- ¬†a mathematical technique that determines the number of possible arrangements in a collection of items where the order of the selection does not matter \n\n- In combination order doesn't matter \n\n- Examples \n\t- Selection from a food menu\n\t- Selection of clothes \n\t- Selecting two desserts from from a list of 19\n\t- Selecting a one person from one million people in a lottery ","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/MC/what_is_permutation":{"title":"What is Permutation","content":"\nWhat is permutation\n\n- The term permutation refers to¬†a mathematical calculation of the number of ways a particular set can be arranged\n\n- In permutations the order matters \n\n- Examples \n\t- Arranging people in a line\n\t- Arranging numbers \n\t- Arranging alphabets","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/MC/what_is_the_difference_between_cartesian_product_and_relation":{"title":"What is the difference between Cartesian Product and Relation","content":"\n\nWhat is the difference between Cartesian product and relation\n\n-   Every [[Nibm_Notes/Semester_1/Stage_1/MC/relation|relation]] is a subset of the  [[Nibm_Notes/Semester_1/Stage_1/MC/cartesian_product|Cartesian product]]\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/MC/what_is_the_difference_between_relationship_and_a_function":{"title":"What is the difference between Relation and Function","content":"What is the difference between relationship and a function\n\n-   a  [[Nibm_Notes/Semester_1/Stage_1/MC/relation|relationship]] can have many outputs for a single input, but a  [[Nibm_Notes/Semester_1/Stage_1/MC/function_math|function]] has a single input for a single output\n\n-   All functions are relations\n\n-   All relations are not functions\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/PF/array":{"title":"Array","content":"\n¬†**Array**\n\n-   An array is a collection of items ([[Nibm_Notes/Semester_1/Stage_1/PF/variable|variables]]) of same data type stored at contiguous memory location's . The elements in array have an index to access them\n\n-   Advantages of a array is you can store multiple values efficiently and access the values efficiently using the indexes in the array\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/PF/assembler":{"title":"Assembler","content":"\n- An assembler is¬†a program that takes basic computer instructions and converts them into a pattern of bits that the computer's processor can use to perform its basic operations\n\n- Some people call these instructions assembler language and others use the term assembly language\n\n- Compiler for assembly language is the assembler","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/PF/compilation_of_C":{"title":"Compilation of C","content":"\nCompilation of C\n\n-   Pre-Processing\n\n    -   ¬†All the statements starting with the¬†#¬†symbol in a C program are processed by the [[Nibm_Notes/Semester_1/Stage_1/PF/pre_processing|pre-processor]], and it converts our program file into an intermediate file with no¬†#¬†statements\n\n\n-   Compiling\n\n    -   Compiling phase in C uses an inbuilt¬†[[Nibm_Notes/Semester_1/Stage_1/PF/compiler|compiler]] software¬†to convert the intermediate (.i) file into an¬†Assembly file¬†(.s) having assembly level instructions (low-level code)\n\n\n-   Assembling\n\n    -   Assembly level code (.s¬†file) is converted into a machine-understandable code (in binary/hexadecimal form) using an¬†[[Nibm_Notes/Semester_1/Stage_1/PF/assembler|assembler]]\n\n\n-   Linking\n\n    -   A program called the [[Nibm_Notes/Semester_1/Stage_1/PF/linker|linker]] is used to combines all the files like library files and others files into a single self included executable which can be executed in doesn't need any external dependency\n\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/PF/compiler":{"title":"Compiler","content":"\n- A compiler is¬†a special program that translates a programming language's source code into machine code, bytecode or another programming language","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/PF/data_types":{"title":"Data Types and Sizes","content":"\n## Data type and sizes in bytes\n\n- Char - 1 byte\n- Int - 4 bytes \n- Float - 4 bytes \n- Double - 8 bytes ","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/PF/linker":{"title":"Linker","content":"\n## Linker\n\n- Linker is a program in a system which helps to link object modules of a program into a single object file\n- It performs the process of linking\n- Linker combines many files of the program into a single executable which can be executed by it self without any external dependencies.","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/PF/pre_processing":{"title":"Pre Processing","content":"\n\n- A common example from computer programming is¬†the processing performed on source code before the step of compilation\n- ¬†This can also include macro processing, file inclusion and language extensions","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_1/PF/variable":{"title":"Variable","content":"\nSaturday, 1 October 2022\n\n15:02\n\n## Variable\n\n-   A variable is a abstract storage location paired with an associated symbolic name which holds a known or unknown value . In simple terms variable is a named container which holds a particular set of bits or types of data\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_2/OOP/Concepts/Inheritance":{"title":"Inheritance","content":"\n- Inheritance gives the ability to re-use attributes and methods of a class in another class\n- In simple terms inheritance is reuse\n- In inheritance there are two class\n\t- Super Class\n\t- Sub Class\n- The Super Class and the Sub Class has an **\"Is a\"** a relationship between them\n- The association **\"has a\"** relation between them\n- There are multiple types of inheritance \n\t- Single Inheritance\n\t- Hierarchical Inheritance\n\t- Multilevel Inheritance\n\n### Single Inheritance\n\n![](Nibm_Notes/Semester_1/Stage_2/OOP/Concepts/assets/singal_inheritence.png)\n\n- A class inherits another class is called single inheritance\n- In the top example Manger class inherits the Employee class\n- The inheritance done only in a one level Super class to Sub class\n\n```Java\nclass Employee {\n\tprotected String id;\n\tprotected String name;\n\tprotected float salary;\n\n\tpublic void setEmployeeData(String id, String  name, float salary) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.salary = salary;\n\t}\n\n\tpublic void showEmployeeData() {\n\t\tSystem.out.println(\"Employee id - \" + id);\n\t\tSystem.out.println(\"Employee name - \" + name);\n\t\tSystem.out.println(\"Employee salary - \" + salary);\n\t}\n}\n\nclass Manager extends Employee {\n\tprivate String manager_id;\n\tprivate float incentive;\n\tprivate float salary_with_incentive;\n\n\tpublic void setMangerData(String manager_id, float incentive) {\n\t\tthis.manager_id = manager_id;\n\t\tthis.incentive = incentive;\n\t} \n\n\tpublic void calcSalaryWithIncentive() {\n\t\tsalary_with_incentive = salary + incentive;\n\t}\n\n\tpublic void showMangerData() {\n\t\tSystem.out.println(\"Employee id - \" + id);\n\t\tSystem.out.println(\"Manger id - \" + manager_id);\n\t\tSystem.out.println(\"Manger name - \" + name);\n\t\tSystem.out.println(\"Manger salary with incentive - \" + salary_with_incentive);\n\t}\n} \n\nclass Main {\n\tpublic static void main(String args[]) {\n\t\tManager manager = new Manager();\n\t\tmanager.setEmployeeData(\"E1\", \"Arkam\", 100000);\n\t\tmanager.setMangerData(\"M1\", 50000);\n\t\tmanager.calcSalaryWithIncentive();\n\t\tmanager.showMangerData();\n\t}\n}\n```\n\noutput\n```output\nEmployee id - E1\nManger id - M1\nManger name - Arkam\nManger salary with incentive - 150000.0\n```\n\n### Hierarchical Inheritance\n\n\n![](Nibm_Notes/Semester_1/Stage_2/OOP/Concepts/assets/hierarchical_inheritance.png)\n\n- When two ore more classes inherits a single class it is known as hierarchical inheritance\n- A single super class can have multiple sub classes this is hierarchical inheritance\n- As shown above the classes Developer, Manager and Tester inherits from the Employee class\n\n```Java\nclass Employee {\n\tprotected String id;\n\tprotected String name;\n\n\tpublic void setEmployeeData(String id, String name) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t}\n\n\tpublic void showEmployeeData() {\n\t\tSystem.out.println(\"Employee id - \" + id);\n\t\tSystem.out.println(\"Employee name - \" + name);\n\t\tSystem.out.print(\"\\n\");\n\t}\n}\n\nclass Developer extends Employee {\n\tprivate String developer_id;\n\n\tpublic void setDeveloperData(String developer_id) {\n\t\tthis.developer_id = developer_id;\n\t}\n\n\tpublic void showDeveloperData() {\n\t\tSystem.out.println(\"-- Role Developer --\");\n\t\tSystem.out.println(\"Developer id - \" + developer_id);\n\t}\n}\n\nclass Manager extends Employee {\n\tprivate String manager_id;\n\n\tpublic void setManagerData(String manager_id) {\n\t\tthis.manager_id = manager_id;\n\t}\n\n\tpublic void showManagerData() {\n\t\tSystem.out.println(\"-- Role Manager --\");\n\t\tSystem.out.println(\"Manager id - \" + manager_id);\n\t}\n}\n\nclass Tester extends Employee {\n\tprivate String tester_id;\n\n\tpublic void setTesterData(String tester_id) {\n\t\tthis.tester_id = tester_id;\n\t}\n\n\tpublic void showTesterData() {\n\t\tSystem.out.println(\"-- Role Tester --\");\n\t\tSystem.out.println(\"Tester id - \" + tester_id);\n\t}\n}\n\nclass Main {\n\tpublic static void main(String args[]) {\n\t\tDeveloper developer = new Developer();\n\t\tdeveloper.setEmployeeData(\"E1\", \"Gihane\");\n\t\tdeveloper.setDeveloperData(\"D1\");\n\t\tdeveloper.showDeveloperData();\n\t\tdeveloper.showEmployeeData();\n\n\t\tManager manager = new Manager();\n\t\tmanager.setEmployeeData(\"E2\", \"Cadnus\");\n\t\tmanager.setManagerData(\"M1\");\n\t\tmanager.showManagerData();\n\t\tmanager.showEmployeeData();\n\n\t\tTester tester = new Tester();\n\t\ttester.setEmployeeData(\"E3\", \"Jane\");\n\t\ttester.setTesterData(\"T1\");\n\t\ttester.showTesterData();\n\t\ttester.showEmployeeData();\n\t}\n}\n```\n\noutput \n```output\n-- Role Developer --\nDeveloper id - D1\nEmployee id - E1\nEmployee name - Gihane\n\n-- Role Manager --\nManager id - M1\nEmployee id - E2\nEmployee name - Cadnus\n\n-- Role Tester --\nTester id - T1\nEmployee id - E3\nEmployee name - Jane\n```\n\n### Multilevel Inheritance\n\n\n![](Nibm_Notes/Semester_1/Stage_2/OOP/Concepts/assets/multilevel_inheritance.png)\n\n- In multilevel inheritance there is a chain of  inheritance\n- As you can see above Area Manager class inherits Manager class and the Manager class inherits the Employee class.\n\n```Java\nclass Employee {\n\tprotected String id;\n\tprotected String name;\n\tprotected float salary;\n\n\tpublic void setData(String id, String name, float salary) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.salary = salary;\n\t}\n}\n\nclass Manager extends Employee {\n\tprotected float incentive;\n\tprotected float salary_with_incentive;\n\n\tpublic void setManagerIncentive(float incentive) {\n\t\tthis.incentive = incentive;\n\t}\n\n\tpublic void calcSalaryWithIncentive() {\n\t\tsalary_with_incentive = salary + incentive;\n\t}\n}\n\nclass AreaManager extends Manager {\n\tprivate String managing_area;\n\n\tpublic void setMangingArea(String managing_area) {\n\t\tthis.managing_area = managing_area;\n\t}\n\n\tpublic void showAreaManagerDetails() {\n\t\tSystem.out.println(\"-- Area Manager Details --\");\n\t\tSystem.out.println(\"Id - \" + id);\n\t\tSystem.out.println(\"Name - \" + name);\n\t\tSystem.out.println(\"Salary with incentive  - \" + salary_with_incentive);\n\t\tSystem.out.println(\"Managing area - \" + managing_area);\n\t}\n}\n\nclass Main {\n\tpublic static void main(String args[]) {\n\t\tAreaManager area_manager = new AreaManager();\n\t\tarea_manager.setData(\"AE1\", \"Rayan Dhal\", 1000000);\n\t\tarea_manager.setManagerIncentive(500000);\n\t\tarea_manager.setMangingArea(\"Colombo\");\n\t\tarea_manager.calcSalaryWithIncentive();\n\t\tarea_manager.showAreaManagerDetails(); \n\t}\n}\n```\n\noutput \n```output\n-- Area Manager Details --\nId - AE1\nName - Rayan Dhal\nSalary with incentive  - 1500000.0\nManaging area - Colombo\n```\n\n### Inherited Constructor \n\n- When a constructor is derived the super class constructor will be called first then the derived class (sub class) constructor will be called. This happens because the constructor call happens from top to bottom\n- If there was a class our parent class is extending then the body of that class will be executed thereafter landing up to derived class \n- If we call a parameterized constructor of the base class then we call it using **super()**\n- The point to note is the base  class constructor call must be the first line in the derived class constructor \n\n```Java \nclass Employee {\n\tprotected String id;\n\tprotected String name;\n\t\n\tpublic Employee(String id, String name) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t}\n}\n\nclass Manager extends Employee {\n\tprivate String managing_sector;\n\n\tpublic Manager(String id, String name, String managing_sector) {\n\t\t// super is used to call the super class constructor \n\t\tsuper(id, name);\n\t\tthis.managing_sector = managing_sector;\n\t} \n\n\tpublic void showManagerDetails() {\n\t\tSystem.out.println(\"Manager Id - \" + id);\n\t\tSystem.out.println(\"Manager Name - \" + name);\n\t\tSystem.out.println(\"Managing Sector  - \" + id);\n\t}\n}\n\nclass Main {\n\tpublic static void main(String args[]) {\n\t\tManager manager = new Manager(\"E1\", \"Arkam\", \"DEV\");\n\t\tmanager.showManagerDetails();\n\t}\n}\n```\n\noutput \n```output\nManager Id - E1\nManager Name - Arkam\nManaging Sector  - E1\n```\n\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_2/OOP/Concepts/abstraction":{"title":"Abstraction","content":"\n- In simple terms hiding implementation details is called abstraction\n- Example \n\t- There is a login form in an application. we will fill out the form and press the submit button. The form will be submitted but the end user will have no idea about how the submit functionality works\n- With abstraction the program gets a higher level of security because the attacker doesn't know the complete implementation of the program\n\n```Java\nclass Salary {\n¬† ¬† private float salary;\n¬† ¬† private float incentive;\n¬† ¬† private float total_income;\n\n¬† ¬† public void setSalary(float salary) {\n¬† ¬† ¬† ¬† this.salary = salary;\n¬† ¬† }\n\n¬† ¬† public void setIncentive(float incentive) {\n¬† ¬† ¬† ¬† this.incentive = incentive;\n¬† ¬† }\n\n¬† ¬† public void calcTotalIncome() {\n¬† ¬† ¬† ¬† total_income = salary + incentive;\n¬† ¬† }\n\n¬† ¬† public float getTotalIncome() {\n¬† ¬† ¬† ¬† return total_income;\n¬† ¬† }\n}\n\nclass Employee {\n¬† ¬† private String id;\n¬† ¬† private String name;\n¬† ¬† private Salary salary;\n\n¬† ¬† public void setId(String id) {\n¬† ¬† ¬† ¬† this.id = id;\n¬† ¬† }\n¬† ¬† \n¬† ¬† public void setName(String name) {\n¬† ¬† ¬† ¬† this.name = name;\n¬† ¬† }\n¬† ¬† \n¬† ¬† public void setSalary(Salary salary) {\n¬† ¬† ¬† ¬† this.salary = salary;\n¬† ¬† }\n\n¬† ¬† public void showDetails() {\n¬† ¬† ¬† ¬† System.out.println(\"Employee Id - \" + id);\n¬† ¬† ¬† ¬† System.out.println(\"Employee Name - \" + name);\n¬† ¬† ¬† ¬† /* \n¬† ¬† ¬† ¬† The Employee class doesn't know anything about the implementation\n¬† ¬† ¬† ¬† of how the salary is calculated it only needs to call the getTotalIncome \n¬† ¬† ¬† ¬† function get the total salary. the calculation function has been abstrated\n¬† ¬† ¬† ¬† */ \n¬† ¬† ¬† ¬† System.out.println(\"Employee Salary - \" + salary.getTotalIncome());\n¬† ¬† }\n}\n\nclass Main {\n¬† ¬† public static void main(String args[]) {\n¬† ¬† ¬† ¬† Salary salary = new Salary();\n¬† ¬† ¬† ¬† Employee employee = new Employee();\n\n¬† ¬† ¬† ¬† salary.setSalary(10000);\n¬† ¬† ¬† ¬† salary.setIncentive(5000);\n¬† ¬† ¬† ¬† salary.calcTotalIncome();\n\n¬† ¬† ¬† ¬† employee.setId(\"1E\");\n¬† ¬† ¬† ¬† employee.setName(\"Devx\");\n¬† ¬† ¬† ¬† employee.setSalary(salary);\n¬† ¬† ¬† ¬† employee.showDetails();\n¬† ¬† }\n}\n```","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_2/OOP/Concepts/class_and_object":{"title":"Class and Object","content":"\n### Class\n\n- A class is a template (blueprint) which is used to create objects in programming\n- A class has attributes and functions \n\n- For Example\n\t- Employee\n\t\t- Attributes \n\t\t\t- age\n\t\t\t- name\n\t\t- Functions\n\t\t\t- Walk\n\t\t\t- Work\n\t\t\t- Eat\n\n- Java Example \n```Java\nClass Employee {\n\tprivate int _age;\n\tprivate String _name;\n\n\tpublic static void Walk() {\n\t\t//walk function\n\t}\n\n\tpublic static void Work() {\n\t\t//work function\n\t}\n\n\tpublic static void Eat() {\n\t\t//eat function\n\t}\n}\n```\n\n### Object\n\n- Object  is used to represent any real word thing(s) or entity(s) in  a program. Any real-world entity is called an object\n\n- A class has attributes. When an object is created from the class the attributes get values assigned to them.\n\n- An object can have many attributes (properties) and it can preform functions (activities)\n\n- An object can be called as a member of a class\n\n- For Example\n\t- Employee\n\t\t- Attributes\n\t\t\t- age - 43\n\t\t\t- name - Gihan\n\t\t- Functions\n\t\t\t- Walk\n\t\t\t- Work\n\t\t\t- Eat\n\n- Java Example\n```Java\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\t// Employee is a class\n\t\t// the employee class creates object e\n\t\tEmployee e = new Employee();\n\n\t\t// age is an attribute and 45 assigned as the value\n\t\te.set_age(45);\n\n\t\t// name is an attribute and Gihana assigned as the value\n\t\te.set_name(\"Gihana\");\n\n\t\t// Functions are activities which the object can do\n\t\te.Walk();\n\t\te.Work();\n\t\te.Eat();\n\t}\n}\n\nclass Employee {\n\t// all ways keep attributes private\n\t// So outside class can't access the value directly \n\tprivate int _age;\n\tprivate String _name;\n\n\t// use ¬†setters set age value \n\tpublic void set_age(int age) {\n\t\t_age = age;\n\t}\n\n\t// use ¬†setters set name value\n\tpublic void set_name(String name) {\n\t\t_name = name;\n\t}\n\n\tpublic void Walk() {\n\t\tSystem.out.println(_name + \" Walks\");\n\t}\n\n\tpublic void Work() {\n\t\tSystem.out.println(_name + \" Works\");\n\t}\n\n\tpublic void Eat() {\n\t\tSystem.out.println(_name + \" Eats\");\n\t}\n}\n```","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_2/OOP/Concepts/encapsulation":{"title":"Encapsulation","content":"\n- Encapsulation is the process of combining Attributes and Methods in to single unit.\n\n- The basic unit of encapsulation is the class.\n\n- The class holds the attributes and methods\n\n  - attributes in a class are hidden using private label\n  - methods in class can be public and these methods are used to access private attributes\n\n- Java Encapsulation Example\n\n```Java\npublic class Main {\n¬† ¬† public static void main(String[] args) {\n¬† ¬† ¬† ¬† // Employee is a class\n¬† ¬† ¬† ¬† // the employee class creates object e\n¬† ¬† ¬† ¬† Employee e = new Employee();\n¬† ¬† ¬† ¬†\n\t\t// setter methods are used to set values to private attributes\n¬† ¬† ¬† ¬† // age is an attribute and 45 assigned as the value\n¬† ¬† ¬† ¬† e.set_age(45);\n¬† ¬† ¬† ¬† // name is an attribute and Gihana assigned as the value\n¬† ¬† ¬† ¬† e.set_name(\"Gihana\");\n\n\t\t// getters are used to get values from private attributes\n\t\te.get_age();\n\t\te.get_name();\n\n¬† ¬† ¬† ¬† // Functions are activities which the object can do\n¬† ¬† ¬† ¬† e.Walk();\n¬† ¬† ¬† ¬† e.Work();\n¬† ¬† ¬† ¬† e.Eat();\n¬† ¬† }\n}\n\n\n/* Employee class ¬†encapsulates all the attributes and methods the employee has like a capsule*/\nclass Employee {\n¬† ¬† // all ways keep attributes private\n¬† ¬† // So outside class can't access the value directly\n¬† ¬† private int _age;\n¬† ¬† private String _name;\n\n¬† ¬† // use setters set age value\n¬† ¬† public void set_age(int age) {\n¬† ¬† ¬† ¬† _age = age;\n¬† ¬† }\n\n¬† ¬† // use setters set name value\n¬† ¬† public void set_name(String name) {\n¬† ¬† ¬† ¬† _name = name;\n¬† ¬† }\n\n¬† ¬† // use getters to get age value\n¬† ¬† public int get_age() {\n¬† ¬† ¬† ¬† ¬†return _age;\n¬† ¬† }\n\n¬† ¬† // use getters to get age value\n¬† ¬† public String get_name() {\n¬† ¬† ¬† ¬† return _name;\n¬† ¬† }\n\n¬† ¬† public void Walk() {\n¬† ¬† ¬† ¬† System.out.println(_name + \" Walks\");\n¬† ¬† }\n\n¬† ¬† public void Work() {\n¬† ¬† ¬† ¬† System.out.println(_name + \" Works\");\n¬† ¬† }\n\n¬† ¬† public void Eat() {\n¬† ¬† ¬† ¬† System.out.println(_name + \" Eats\");\n¬† ¬† }\n\n}\n```\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_2/OOP/Concepts/labels":{"title":"Public, Private and Protected Labels","content":"\n#### Public\n\n- When a attribute or method is given public label it will be visible to all classes out side its [[Nibm_Notes/Semester_1/Stage_2/OOP/Concepts/class_and_object#Class|class]] \n- Normally attributes are not made public\n- Methods are made public to implement functionality and access private attributes \n- Lowest level of security is given to a public attribute its value can be mutated by any other [[Nibm_Notes/Semester_1/Stage_2/OOP/Concepts/class_and_object#Class|class]] without any restriction. Which is generally considered not suitable to use\n\n```Java\nclass Employee {\n\tpublic String id;\n\tpublic String name;\n}\n\nclass Main {\n\tpublic static void main(String args[]) {\n\t\tEmployee employee = new Employee();\n\t\t/* \n\t\tas shown below the attributes can be directly accessed from the \n\t\temployee object of the Employee class without any restriction \n\t\t*/\n\t\temployee.id = \"E1\";\n\t\temployee.name = \"Arkam\";\n\n\t\tSystem.out.println(\"Employee id - \" + employee.id);\n\t\tSystem.out.println(\"Employee Name - \" + employee.name);\n\t}\n}\n```\n\noutput\n```output\nEmployee id - E1\nEmployee Name - Arkam\n```\n\n#### Private\n\n- When field is labeled private it gets the highest level of protection\n- Private attributes and methods are only accessible by its own [[Nibm_Notes/Semester_1/Stage_2/OOP/Concepts/class_and_object#Class|class]] \n- If we need to manipulate a private attribute we have to use a public method \n- They also can't be inherited by [[Nibm_Notes/Semester_1/Stage_2/OOP/Concepts/Inheritance|sub classes]]\n- In the process of [[Nibm_Notes/Semester_1/Stage_2/OOP/Concepts/encapsulation|encapsulation]] the attributes of a class are generally named private but if there is  [[Nibm_Notes/Semester_1/Stage_2/OOP/Concepts/Inheritance|inheritance]] it will use the protected \n\n```Java\nclass Employee {\n\t// private attributes can't be accessed outside it's own class\n\tprivate String id;\n\tprivate String name;\n\n\t/* \n\tthe private attributes will be set using this public method \n\twhich can be accessed outside of this class\n\t*/\n\tpublic void setData(String id, String name) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t}\n\t\n\t/* \n\tthe private attribute values will be returned using these public method \n\twhich can be accessed outside of this class\n\t*/\n\tpublic String getId() {\n\t\treturn id;\n\t}\n\n\tpublic String getName() {\n\t\treturn name;\n\t}\n}\n\nclass Main {\n\tpublic static void main(String args[]) {\n\t\tEmployee employee = new Employee();\n\t\t// a setter i s used to set data to the private attributes \n\t\temployee.setData(\"E1\", \"Arkam\");\n\t\n\t\t// getters are used to return values from private attributes \n\t\tSystem.out.println(\"Employee id - \" + employee.getId());\n\t\tSystem.out.println(\"Employee Name - \" + employee.getName());\n\t}\n}\n```\n\noutput \n```output\nEmployee id - E1\nEmployee Name - Arkam\n```\n\n#### Protected\n\n- When a field is labeled protected it will be accessible by its own [[Nibm_Notes/Semester_1/Stage_2/OOP/Concepts/class_and_object#Class|class]] and its [[Nibm_Notes/Semester_1/Stage_2/OOP/Concepts/Inheritance|sub classes]] \n- This type of label has medium level of protection\n\n```Java\nclass Employee {\n\tprotected String id;\n\tprotected String name;\n\n\tpublic void setData(String id, String name) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t}\n}\n\nclass Manager extends Employee {\n\tprivate String managing_sector;\n\n\tpublic void setManagingSector(String managing_sector) {\n\t\tthis.managing_sector = managing_sector;\n\t}\n\n\tpublic void showManagerData() {\n\t\t/*\n\t\tthe sub class Manager which inherits the Employee class\n\t\tcan access Employee classes protected attributes id and name\n\t\t*/ \n\t\tSystem.out.println(\"Manager Id - \" + id);\n\t\tSystem.out.println(\"Manager Name - \" + name);\n\t\tSystem.out.println(\"Managing Sector - \" + managing_sector);\n\t}\n}\n\nclass Main {\n\tpublic static void main(String args[]) {\n\t\tManager manager = new Manager();\n\t\tmanager.setData(\"M1\", \"Arkam\");\n\t\tmanager.setManagingSector(\"HR\");\n\t\tmanager.showManagerData();\n\t}\n}\n```\n\noutput \n```output\nManager Id - M1\nManager Name - Arkam\nManaging Sector - HR\n```\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/Nibm_Notes/Semester_1/Stage_2/OOP/Java/java":{"title":"Java","content":"\n#### Install Java JDK\n\n- Side note need an oracle account\n- Install java version 8 for stability\n- Install java in the default location\n- Install all the default development tools \n- Set the environment variables for java and javac\n\n#### Facts about java\n\n- Java is a compiled and interpreted programing language which runs on more then 3 billion devices \n- Java is used to build app for mobile application to enterprise scale server application\n- Java is a statically typed language with garbage collection\n- Java is also case sensitive\n\n#### Java compiler (Javac)\n\n- The Java compiler (javac) is the compiler which turns java source code into class files which contains  java bytecode which is run on the Java virtual machine (JVM)\n\n#### Java virtual machine (JVM)\n\n- Java virtual machine is used to execute the java byte code which are in java class files\n- Java virtual machine is a abstract virtual machine that runs on top of the host OS.\n\n#### Java data types\n\n- Primitive data  types\n|Type|Size|\n|---|---|\n|byte|1 byte|\n|short|2 bytes|\n|int|4 bytes|\n|long|8 bytes|\n|float|4 bytes|\n|double|8 bytes|\n|boolean|1 bit\n|char|2 bytes|\n\n- Non primitive data types\n\t- String\n\t- Array\n\n#### Compiling and Running java \n\n- Create a java file with a name and \".java\" file extension\n\t- Ex -: main.java\n\n- Write some java source code in it\n```Java\npublic class main {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(\"Hello World\");\n\t}\n}\n```\n- Then navigate to that files location using cmd (bash for OSX, Linux)\n\n- Using the java compiler (javac) compile the java source file\n```\nD:\\Projects\\Java\u003e javac main.java\n```\n- Javac will compile the source code and output a class file\n\t- Ex -: main.class\n\n- Using the java virtual machine run the java class file which contains the java byte code\n```\nD:\\Projects\\Java\u003e java main // do not put the class extension it will throw an error\n```\n- The output will be \"Hello World\"\n\n-  After editing the source code always re-compile the source file before running it\n\n#### Example java code\n\n##### Input and output in java\n\n- Input and output in java\n```Java\npublic class InputAndOutput {\n\tpublic static void main(String args[]) {\n\t\tint num1, num2, result;\n\n\t\tSystem.out.print(\"Enter num 1 : \");\n\t\tnum1 = Integer.parseInt(System.console().readLine());\n\n\t\tSystem.out.print(\"Enter num 2 : \");\n\t\tnum2 = Integer.parseInt(System.console().readLine());\n\n\t\tresult=num1+num2;\n\t\tSystem.out.println(\"Sum is = \" + result);\n\t}\n}\n```\n##### Selection in java\n\n- If else in java \n```Java\npublic class IfElse {\n¬† ¬† public static void main(String[] args) {\n¬† ¬† ¬† ¬† int num;\n¬† ¬† ¬† ¬† \n¬† ¬† ¬† ¬† System.out.print(\"Enter num : \");\n¬† ¬† ¬† ¬† num = Integer.parseInt(System.console().readLine());\n\n¬† ¬† ¬† ¬† if(num\u003e100) {\n¬† ¬† ¬† ¬† ¬† ¬† System.out.print(\"Excellent\");\n¬† ¬† ¬† ¬† } else if(num\u003e80) {\n¬† ¬† ¬† ¬† ¬† ¬† System.out.print(\"Good\");\n¬† ¬† ¬† ¬† } else if(num\u003e60) {\n¬† ¬† ¬† ¬† ¬† ¬† System.out.print(\"Average\");\n¬† ¬† ¬† ¬† } else {\n¬† ¬† ¬† ¬† ¬† ¬† System.out.print(\"Fail\");\n¬† ¬† ¬† ¬† }\n¬† ¬† }\n}\n```\n\n- Switch in java \n```Java\npublic class Hello {\n\tpublic static void main(String[] args) {\n\t\tint num;\n\n\t\tSystem.out.print(\"Enter num : \");\n\t\tnum = Integer.parseInt(System.console().readLine());\n\t\t\n\t\tswitch(num) {\n\t\t\tcase 90:\n\t\t\t\tSystem.out.println(\"A\");\n\t\t\t\tbreak;\n\t\t\tcase 70:\n\t\t\t\tSystem.out.println(\"B\");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tSystem.out.println(\"C\");\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n```\n\n-  Condition operator  (Ternary operator)\n```Java\npublic class Hello {\n\tpublic static void main(String[] args) {\n\t\tint num;\n\n\t\tSystem.out.print(\"Enter num : \");\n\t\tnum = Integer.parseInt(System.console().readLine());\n\t\t\n\t\tString msg = num \u003e 10 ? \"Greater than 10\" : \"Less than 10\";\n\t\tSystem.out.print(msg);\n\t}\n}\n```\n##### Casting values in java \n\n- Casting higher value to lower value\n```Java\npublic class CastHigherToLower {\n\tpublic static void main(String[] args) {\n\t\tfloat a = 100;\n\t\tint b;\n\t\tb=(int)a;\n\t\tSystem.out.println(b);\n\t}\n}\n\npublic class CastHigherToLower {\n\tpublic static void main(String[] args) {\n\t\tbyte a;\n\t\tint b = 100;\n\t\ta=(byte)b;\n\t\tSystem.out.println(b);\n\t}\n}\n```\n\n- Cast lower value to higher value\n```Java\npublic class CastLowerToHiger {\n\tpublic static void main(String[] args) {\n\t\tint a = 100;\n\t\tfloat b;\n\t\tb=a;\n\t\tSystem.out.println(b);\n\t}\n}\n\npublic class CastLowerToHiger {\n\tpublic static void main(String[] args) {\n\t\tfloat a = 100;\n\t\tdouble b;\n\t\tb=a;\n\t\tSystem.out.println(b);\n\t}\n}\n```\n##### Java data type conversions\n\n- String to int\n```Java\npublic class StringToInt {\n\tpublic static void main(String args[]) {\n\t\tString value = \"100\";\n\t\tint x = Integer.parseInt(value);\n\t\tSystem.out.println(x);\n\t}\n}\n```\n\n- String to Float\n```Java\npublic class StringToFloat {\n\tpublic static void main(String args[]) {\n\t\tString value = \"100\";\n\t\tfloat x = Float.parseFloat(value);\n\t\tSystem.out.println(x);\n\t}\n}\n```\n\n- String to Double\n ```Java\npublic class StringToDouble {\n\tpublic static void main(String args[]) {\n\t\tString value = \"100\";\n\t\tdouble x = Double.parseDouble(value);\n\t\tSystem.out.println(x);\n\t}\n}\n```\n\n- Parse to String\n```Java\npublic class ParseToString {\n\tpublic static void main(String args[]) {\n\t\tint value = 100;\n\t\tString x = String.valueOf(value);\n\t\tSystem.out.println(x);\n\t}\n}\n```","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/utils/about/_about":{"title":"About","content":"\n### About This Mindless Digital Garden ( buzz word for notes )\n\n1. This is a personal knowledge management system (PKM) about everything Development and Technology related but there will be always of topic stuff.\n\n2. In here everything is a mesh and every related note is linked to each other.\n\n3. The PKM is based on technologies I have used or I am interested in and also the bleeding edge technologies in the dev world. So this blog is highly opinionated. So take my words with a big grain of üßÇ.\n\n4. Enjoy Reading.\n\n### Technologies Used In This Blog\n\n1. [Hugo](https://gohugo.io/) a really good static site generator and the fastest way to render html in the world.\n\n2. [Obsidian](https://obsidian.md/) a second brain which uses standard markdown to save data.\n\n3. [Quartz](https://github.com/jackyzha0/quartz/) uses Hugo to turn obsidian vault into a static site.\n\n4. [Github](https://github.com/) is used as a content management system.\n\n5. [GithubPages](https://pages.github.com/) used to host the PKM a good static site hosting option.\n\n6. [GithubActions](https://github.com/features/actions) are used to rebuild and redeploy the PKM.\n\n### Features \n\n1. Graph View\n2. Relation Tags\n3. Back Links\n4. Native [[utils/features/_latex_support|latex]] support \n5. Native [[utils/features/_callouts|callout]] support\n\n### About Me\n\n- Who am I kidding. I am nobody üëã","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/utils/features/_callouts":{"title":"Callouts","content":"\n## Callout support\n\nThis includes\n- 12 Distinct callout types (each with several aliases)\n- Collapsible callouts\n\nSee [documentation on supported types and syntax here](https://help.obsidian.md/How+to/Use+callouts#Types).\n\n## Showcase\n\n\u003e [!EXAMPLE] Examples\n\u003e\n\u003e Aliases: example\n\n\u003e [!note] Notes\n\u003e\n\u003e Aliases: note\n\n\u003e [!abstract] Summaries \n\u003e\n\u003e Aliases: abstract, summary, tldr\n\n\u003e [!info] Info \n\u003e\n\u003e Aliases: info, todo\n\n\u003e [!tip] Hint \n\u003e\n\u003e Aliases: tip, hint, important\n\n\u003e [!success] Success \n\u003e\n\u003e Aliases: success, check, done\n\n\u003e [!question] Question \n\u003e\n\u003e Aliases: question, help, faq\n\n\u003e [!warning] Warning \n\u003e\n\u003e Aliases: warning, caution, attention\n\n\u003e [!failure] Failure \n\u003e\n\u003e Aliases: failure, fail, missing\n\n\u003e [!danger] Error\n\u003e\n\u003e Aliases: danger, error\n\n\u003e [!bug] Bug\n\u003e\n\u003e Aliases: bug\n\n\u003e [!quote] Quote\n\u003e\n\u003e Aliases: quote, cite\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null},"/utils/features/_latex_support":{"title":"Latex Support","content":"\n## Latex\n\nBlock math works with two dollar signs `$$...$$`\n\n$$f(x) = \\int_{-\\infty}^\\infty\n    f\\hat(\\xi),e^{2 \\pi i \\xi x}\n    \\,d\\xi$$\n\t\nInline math also works with single dollar signs `$...$`. For example, Euler's identity but inline: $e^{i\\pi} = 0$\n\nAligned equations work quite well:\n\n$$\n\\begin{aligned}\na \u0026= b + c \\\\ \u0026= e + f \\\\\n\\end{aligned}\n$$\n\nAnd matrices\n\n$$\n\\begin{bmatrix}\n1 \u0026 2 \u0026 3 \\\\\na \u0026 b \u0026 c\n\\end{bmatrix}\n$$\n","lastmodified":"2022-11-26T15:24:38.467427501Z","tags":null}}