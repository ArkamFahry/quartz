<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>compilation on</title><link>https://arkamfahry.github.io/quartz/tags/compilation/</link><description>Recent content in compilation on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://arkamfahry.github.io/quartz/tags/compilation/index.xml" rel="self" type="application/rss+xml"/><item><title>Assembler</title><link>https://arkamfahry.github.io/quartz/nibm_notes/programming_fundamentals/programming_terms/assembler/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://arkamfahry.github.io/quartz/nibm_notes/programming_fundamentals/programming_terms/assembler/</guid><description>An assembler is a program that takes basic computer instructions and converts them into a pattern of bits that the computer&amp;rsquo;s processor can use to perform its basic operations</description></item><item><title>Compilation of C</title><link>https://arkamfahry.github.io/quartz/nibm_notes/programming_fundamentals/c_programing/compilation_of_C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://arkamfahry.github.io/quartz/nibm_notes/programming_fundamentals/c_programing/compilation_of_C/</guid><description>Compilation of C
Pre-Processing
 All the statements starting with the # symbol in a C program are processed by the [[nibm_notes/programming_fundamentals/programming_terms/pre_processing|pre-processor]], and it converts our program file into an intermediate file with no # statements Compiling</description></item><item><title>Compiler</title><link>https://arkamfahry.github.io/quartz/nibm_notes/programming_fundamentals/programming_terms/compiler/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://arkamfahry.github.io/quartz/nibm_notes/programming_fundamentals/programming_terms/compiler/</guid><description> A compiler is a special program that translates a programming language&amp;rsquo;s source code into machine code, bytecode or another programming language</description></item><item><title>Linker</title><link>https://arkamfahry.github.io/quartz/nibm_notes/programming_fundamentals/programming_terms/linker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://arkamfahry.github.io/quartz/nibm_notes/programming_fundamentals/programming_terms/linker/</guid><description>Linker Linker is a program in a system which helps to link object modules of a program into a single object file It performs the process of linking Linker combines many files of the program into a single executable which can be executed by it self without any external dependencies.</description></item><item><title>Pre Processing</title><link>https://arkamfahry.github.io/quartz/nibm_notes/programming_fundamentals/programming_terms/pre_processing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://arkamfahry.github.io/quartz/nibm_notes/programming_fundamentals/programming_terms/pre_processing/</guid><description> A common example from computer programming is the processing performed on source code before the step of compilation  This can also include macro processing, file inclusion and language extensions</description></item></channel></rss>