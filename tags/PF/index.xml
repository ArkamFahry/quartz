<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PF on</title><link>https://arkamfahry.github.io/quartz/tags/PF/</link><description>Recent content in PF on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://arkamfahry.github.io/quartz/tags/PF/index.xml" rel="self" type="application/rss+xml"/><item><title>Array</title><link>https://arkamfahry.github.io/quartz/Nibm_Notes/PF/array/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://arkamfahry.github.io/quartz/Nibm_Notes/PF/array/</guid><description>Array
An array is a collection of items ([[Nibm_Notes/PF/variable|variables]]) of same data type stored at contiguous memory location&amp;rsquo;s .</description></item><item><title>Assembler</title><link>https://arkamfahry.github.io/quartz/Nibm_Notes/PF/assembler/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://arkamfahry.github.io/quartz/Nibm_Notes/PF/assembler/</guid><description>An assembler is a program that takes basic computer instructions and converts them into a pattern of bits that the computer&amp;rsquo;s processor can use to perform its basic operations</description></item><item><title>Compilation of C</title><link>https://arkamfahry.github.io/quartz/Nibm_Notes/PF/compilation_of_C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://arkamfahry.github.io/quartz/Nibm_Notes/PF/compilation_of_C/</guid><description>Compilation of C
Pre-Processing
 All the statements starting with the # symbol in a C program are processed by the [[Nibm_Notes/PF/pre_processing|pre-processor]], and it converts our program file into an intermediate file with no # statements Compiling</description></item><item><title>Compiler</title><link>https://arkamfahry.github.io/quartz/Nibm_Notes/PF/compiler/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://arkamfahry.github.io/quartz/Nibm_Notes/PF/compiler/</guid><description> A compiler is a special program that translates a programming language&amp;rsquo;s source code into machine code, bytecode or another programming language</description></item><item><title>Data Types and Sizes</title><link>https://arkamfahry.github.io/quartz/Nibm_Notes/PF/data_types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://arkamfahry.github.io/quartz/Nibm_Notes/PF/data_types/</guid><description>Data type and sizes in bytes Char - 1 byte Int - 4 bytes Float - 4 bytes Double - 8 bytes</description></item><item><title>Linker</title><link>https://arkamfahry.github.io/quartz/Nibm_Notes/PF/linker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://arkamfahry.github.io/quartz/Nibm_Notes/PF/linker/</guid><description>Linker Linker is a program in a system which helps to link object modules of a program into a single object file It performs the process of linking Linker combines many files of the program into a single executable which can be executed by it self without any external dependencies.</description></item><item><title>Pre Processing</title><link>https://arkamfahry.github.io/quartz/Nibm_Notes/PF/pre_processing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://arkamfahry.github.io/quartz/Nibm_Notes/PF/pre_processing/</guid><description> A common example from computer programming is the processing performed on source code before the step of compilation  This can also include macro processing, file inclusion and language extensions</description></item><item><title>Variable</title><link>https://arkamfahry.github.io/quartz/Nibm_Notes/PF/variable/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://arkamfahry.github.io/quartz/Nibm_Notes/PF/variable/</guid><description>Saturday, 1 October 2022
15:02
Variable A variable is a abstract storage location paired with an associated symbolic name which holds a known or unknown value .</description></item></channel></rss>